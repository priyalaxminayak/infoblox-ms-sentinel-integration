{
    "version": "Notebook/1.0",
    "items": [
      {
        "type": 11,
        "content": {
          "version": "LinkItem/1.0",
          "style": "tabs",
          "links": [
            {
              "id": "d3af8e0b-806c-4f1f-b006-845c842bc2fc",
              "cellValue": "Parameter",
              "linkTarget": "parameter",
              "linkLabel": "DNS",
              "subTarget": "1",
              "style": "link"
            },
            {
              "id": "dbd0c004-e0b4-446c-91cd-5a5af3f6e16e",
              "cellValue": "Parameter",
              "linkTarget": "parameter",
              "linkLabel": "DHCP",
              "subTarget": "2",
              "style": "link"
            },
            {
              "id": "41df2b27-5f91-4a8b-adcb-e7997f86d6d6",
              "cellValue": "Parameter",
              "linkTarget": "parameter",
              "linkLabel": "Audit",
              "subTarget": "3",
              "style": "link"
            },
            {
              "id": "f8b51e3b-e4b2-4ba4-9a9c-bedea05a1ee7",
              "cellValue": "Parameter",
              "linkTarget": "parameter",
              "linkLabel": "Blocked DNS",
              "subTarget": "4",
              "style": "link"
            }
          ]
        },
        "name": "links - 1"
      },
      {
        "type": 12,
        "content": {
          "version": "NotebookGroup/1.0",
          "groupType": "editable",
          "items": [
            {
              "type": 9,
              "content": {
                "version": "KqlParameterItem/1.0",
                "parameters": [
                  {
                    "id": "e1e015ea-e688-48be-ac2b-846fe98be48e",
                    "version": "KqlParameterItem/1.0",
                    "name": "TimeRange",
                    "label": "Time Range",
                    "type": 4,
                    "isRequired": true,
                    "typeSettings": {
                      "selectableValues": [
                        {
                          "durationMs": 300000
                        },
                        {
                          "durationMs": 900000
                        },
                        {
                          "durationMs": 1800000
                        },
                        {
                          "durationMs": 3600000
                        },
                        {
                          "durationMs": 14400000
                        },
                        {
                          "durationMs": 43200000
                        },
                        {
                          "durationMs": 86400000
                        },
                        {
                          "durationMs": 172800000
                        },
                        {
                          "durationMs": 259200000
                        },
                        {
                          "durationMs": 604800000
                        },
                        {
                          "durationMs": 1209600000
                        },
                        {
                          "durationMs": 2419200000
                        },
                        {
                          "durationMs": 2592000000
                        },
                        {
                          "durationMs": 5184000000
                        },
                        {
                          "durationMs": 7776000000
                        }
                      ],
                      "allowCustom": true
                    },
                    "timeContext": {
                      "durationMs": 86400000
                    },
                    "value": {
                      "durationMs": 1209600000
                    }
                  },
                  {
                    "id": "9f36e52f-3282-4976-9187-7b3f551d91e9",
                    "version": "KqlParameterItem/1.0",
                    "name": "User",
                    "type": 2,
                    "multiSelect": true,
                    "quote": "'",
                    "delimiter": ",",
                    "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\"\r\nand DeviceEventClassID has_cs \"DNS\"\r\nand isnotempty(SourceUserName)\r\n| summarize arg_max(TimeGenerated,*) by SourceUserName\r\n| project SourceUserName\r\n| sort by SourceUserName asc",
                    "typeSettings": {
                      "additionalResourceOptions": [
                        "value::all"
                      ],
                      "selectAllValue": "*",
                      "showDefault": false
                    },
                    "timeContext": {
                      "durationMs": 7776000000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "defaultValue": "value::all",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "value": [
                      "value::all"
                    ]
                  },
                  {
                    "id": "8b364f17-07f7-4403-8086-26bf36c92536",
                    "version": "KqlParameterItem/1.0",
                    "name": "Asset",
                    "type": 2,
                    "multiSelect": true,
                    "quote": "'",
                    "delimiter": ",",
                    "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\"\r\nand DeviceEventClassID has_cs \"DNS\" and isnotempty(DeviceName)\r\n| distinct DeviceName\r\n| sort by DeviceName desc",
                    "typeSettings": {
                      "additionalResourceOptions": [
                        "value::all"
                      ],
                      "selectAllValue": "*",
                      "showDefault": false
                    },
                    "timeContext": {
                      "durationMs": 1209600000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "defaultValue": "value::all",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "value": [
                      "value::all"
                    ]
                  },
                  {
                    "id": "cf61f3a4-fe90-4244-b94b-4aedc1210af9",
                    "version": "KqlParameterItem/1.0",
                    "name": "Location",
                    "type": 2,
                    "multiSelect": true,
                    "quote": "'",
                    "delimiter": ",",
                    "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\"\r\nand DeviceEventClassID has_cs \"DNS\"\r\n| parse-kv AdditionalExtensions as (InfobloxB1Region:string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where isnotempty(InfobloxB1Region) \r\n| distinct Location = InfobloxB1Region\r\n| sort by Location asc",
                    "typeSettings": {
                      "additionalResourceOptions": [
                        "value::all"
                      ],
                      "selectAllValue": "*",
                      "showDefault": false
                    },
                    "timeContext": {
                      "durationMs": 1209600000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "defaultValue": "value::all",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "value": [
                      "value::all"
                    ]
                  },
                  {
                    "id": "66255f50-472e-4295-8d64-6b9fa2e3c887",
                    "version": "KqlParameterItem/1.0",
                    "name": "SLD",
                    "type": 2,
                    "multiSelect": true,
                    "quote": "'",
                    "delimiter": ",",
                    "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\"\r\nand DeviceEventClassID has_cs \"DNS\" and isnotempty(DestinationDnsDomain)\r\n| extend DestinationDnsDomain = trim_end(@'.',DestinationDnsDomain)\r\n| extend domains = split(DestinationDnsDomain,'.')\r\n| extend SecondLevelDomain =strcat(domains[-2],'.',domains[-1])\r\n| distinct SecondLevelDomain",
                    "typeSettings": {
                      "additionalResourceOptions": [
                        "value::all"
                      ],
                      "selectAllValue": "*",
                      "showDefault": false
                    },
                    "defaultValue": "value::all",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "value": [
                      "value::all"
                    ]
                  },
                  {
                    "id": "f0a80c9f-a800-4958-b51c-4b38bfaf6624",
                    "version": "KqlParameterItem/1.0",
                    "name": "ResponseCode",
                    "label": "Response Code",
                    "type": 2,
                    "multiSelect": true,
                    "quote": "'",
                    "delimiter": ",",
                    "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DNS\"\r\n| parse-kv AdditionalExtensions as (InfobloxDNSRCode:string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where isnotempty(InfobloxDNSRCode)\r\n| distinct InfobloxDNSRCode\r\n| sort by InfobloxDNSRCode asc",
                    "typeSettings": {
                      "additionalResourceOptions": [
                        "value::all"
                      ],
                      "selectAllValue": "*",
                      "showDefault": false
                    },
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "defaultValue": "value::all",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  {
                    "id": "aeb144ce-64b1-45ba-85d9-f0a2da9a69d3",
                    "version": "KqlParameterItem/1.0",
                    "name": "RecordType",
                    "label": "Record Type",
                    "type": 2,
                    "multiSelect": true,
                    "quote": "'",
                    "delimiter": ",",
                    "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DNS\"\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where isnotempty(InfobloxDNSQType)\r\n| distinct InfobloxDNSQType\r\n| sort by InfobloxDNSQType asc",
                    "typeSettings": {
                      "additionalResourceOptions": [
                        "value::all"
                      ],
                      "selectAllValue": "*",
                      "showDefault": false
                    },
                    "timeContext": {
                      "durationMs": 1209600000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "defaultValue": "value::all",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  }
                ],
                "style": "pills",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces"
              },
              "name": "parameters - 0"
            },
            {
              "type": 12,
              "content": {
                "version": "NotebookGroup/1.0",
                "groupType": "editable",
                "items": [
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DNS\"\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxDNSRCode:string, InfobloxB1Region:string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{User:escapejson}' == \"*\" or SourceUserName in~ ({User}))\r\nand ('{RecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({RecordType}))\r\nand ('{ResponseCode:escapejson}' == \"*\" or InfobloxDNSRCode in~ ({ResponseCode}))\r\nand ('{Asset:escapejson}' == \"*\" or DeviceName in~ ({Asset}))\r\nand ('{Location:escapejson}' == \"*\" or InfobloxB1Region in~ ({Location}))\r\n| extend DestinationDnsDomain_ = trim_end(@'.',DestinationDnsDomain)\r\n| extend domains = split(DestinationDnsDomain_,'.')\r\n| extend SecondLevelDomain =strcat(domains[-2],'.',domains[-1])\r\n| where ('{SLD:escapejson}' == \"*\" or SecondLevelDomain in~ ({SLD}))\r\n| summarize Count = count() by DestinationDnsDomain\r\n| project DestinationDnsDomain, Count\r\n| sort by Count desc",
                      "size": 0,
                      "showAnalytics": true,
                      "title": "Most Requested FQDNs",
                      "timeContextFromParameter": "TimeRange",
                      "showRefreshButton": true,
                      "exportFieldName": "DestinationDnsDomain",
                      "exportParameterName": "DestinationDnsDomain",
                      "showExportToExcel": true,
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "table",
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "Count",
                            "formatter": 4,
                            "formatOptions": {
                              "palette": "blue"
                            }
                          }
                        ],
                        "rowLimit": 10000,
                        "filter": true
                      }
                    },
                    "name": "Most Requested FQDNs",
                    "styleSettings": {
                      "margin": "5px",
                      "padding": "0",
                      "showBorder": true
                    }
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "💡 _Click on a 'Most Requested FQDNs' grid to see 'Top 10 Devices'."
                    },
                    "conditionalVisibility": {
                      "parameterName": "DestinationDnsDomain",
                      "comparison": "isEqualTo"
                    },
                    "name": "text - 18",
                    "styleSettings": {
                      "margin": "5px"
                    }
                  }
                ],
                "exportParameters": true
              },
              "customWidth": "50",
              "name": "group - 20"
            },
            {
              "type": 12,
              "content": {
                "version": "NotebookGroup/1.0",
                "groupType": "editable",
                "items": [
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DNS\" and isnotempty(SourceUserName)\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxDNSRCode:string, InfobloxB1Region:string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{User:escapejson}' == \"*\" or SourceUserName in~ ({User}))\r\nand ('{RecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({RecordType}))\r\nand ('{ResponseCode:escapejson}' == \"*\" or InfobloxDNSRCode in~ ({ResponseCode}))\r\nand ('{Asset:escapejson}' == \"*\" or DeviceName in~ ({Asset}))\r\nand ('{Location:escapejson}' == \"*\" or InfobloxB1Region in~ ({Location}))\r\n| extend DestinationDnsDomain_ = trim_end(@'.',DestinationDnsDomain)\r\n| extend domains = split(DestinationDnsDomain_,'.')\r\n| extend SecondLevelDomain =strcat(domains[-2],'.',domains[-1])\r\n| where ('{SLD:escapejson}' == \"*\" or SecondLevelDomain in~ ({SLD}))\r\n| summarize Count = count() by SourceUserName\r\n| project SourceUserName, Count\r\n| sort by Count desc",
                      "size": 0,
                      "showAnalytics": true,
                      "title": "DNS Requests Count by Users",
                      "timeContextFromParameter": "TimeRange",
                      "showRefreshButton": true,
                      "exportFieldName": "SourceUserName",
                      "exportParameterName": "SourceUserName",
                      "showExportToExcel": true,
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "Count",
                            "formatter": 4,
                            "formatOptions": {
                              "palette": "blue",
                              "compositeBarSettings": {
                                "labelText": "",
                                "columnSettings": []
                              }
                            }
                          }
                        ],
                        "rowLimit": 10000,
                        "filter": true
                      }
                    },
                    "name": "Top Users",
                    "styleSettings": {
                      "margin": "5px",
                      "showBorder": true
                    }
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "💡 _Click on a 'DNS Requests Count by Users' grid to see 'DNS Requests made by User' and 'Top 10 Requested Domains by User'."
                    },
                    "conditionalVisibility": {
                      "parameterName": "SourceUserName",
                      "comparison": "isEqualTo"
                    },
                    "name": "text - 19",
                    "styleSettings": {
                      "margin": "5px"
                    }
                  }
                ],
                "exportParameters": true
              },
              "customWidth": "50",
              "name": "group - 19"
            },
            {
              "type": 9,
              "content": {
                "version": "KqlParameterItem/1.0",
                "parameters": [
                  {
                    "id": "72d2b1bd-300c-4f3e-b4ca-4dcaec96fb3a",
                    "version": "KqlParameterItem/1.0",
                    "name": "TopDevices",
                    "type": 1,
                    "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DNS\" and DestinationDnsDomain == ('{DestinationDnsDomain}') and isnotempty(DeviceName)\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxDNSRCode:string, InfobloxB1Region:string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{User:escapejson}' == \"*\" or SourceUserName in~ ({User}))\r\nand ('{RecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({RecordType}))\r\nand ('{ResponseCode:escapejson}' == \"*\" or InfobloxDNSRCode in~ ({ResponseCode}))\r\nand ('{Asset:escapejson}' == \"*\" or DeviceName in~ ({Asset}))\r\nand ('{Location:escapejson}' == \"*\" or InfobloxB1Region in~ ({Location}))\r\n| summarize Count = count() by DeviceName\r\n| top 10 by Count desc\r\n| summarize DeviceList = make_list(DeviceName)\r\n\r\n",
                    "timeContext": {
                      "durationMs": 2592000000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  {
                    "id": "102ee8fc-7658-4bca-82f3-54ed66d2ba9d",
                    "version": "KqlParameterItem/1.0",
                    "name": "TopMAC",
                    "type": 1,
                    "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DNS\" and DestinationDnsDomain == ('{DestinationDnsDomain}') and isnotempty(SourceMACAddress)\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxDNSRCode:string, InfobloxB1Region:string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{User:escapejson}' == \"*\" or SourceUserName in~ ({User}))\r\nand ('{RecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({RecordType}))\r\nand ('{ResponseCode:escapejson}' == \"*\" or InfobloxDNSRCode in~ ({ResponseCode}))\r\nand ('{Asset:escapejson}' == \"*\" or DeviceName in~ ({Asset}))\r\nand ('{Location:escapejson}' == \"*\" or InfobloxB1Region in~ ({Location}))\r\n| summarize Count = count() by SourceMACAddress\r\n| top 10 by Count desc\r\n| summarize DeviceList = make_list(SourceMACAddress)\r\n\r\n",
                    "timeContext": {
                      "durationMs": 2592000000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  {
                    "id": "4c59d86e-9130-41a4-ba95-4e7974e4de06",
                    "version": "KqlParameterItem/1.0",
                    "name": "FirstDevice",
                    "type": 1,
                    "query": "print (todynamic('{TopDevices}')[0])",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  {
                    "id": "0f1d8907-d375-4db8-a5c9-f9d7390d8f7f",
                    "version": "KqlParameterItem/1.0",
                    "name": "SecondDevice",
                    "type": 1,
                    "query": "print todynamic('{TopDevices}')[1]",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  {
                    "id": "bd2a1987-e9ba-42ac-9856-a8c781ebb332",
                    "version": "KqlParameterItem/1.0",
                    "name": "ThirdDevice",
                    "type": 1,
                    "query": "print todynamic('{TopDevices}')[2]",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  {
                    "id": "04910ee0-5aa4-4897-82d6-15167ad50e01",
                    "version": "KqlParameterItem/1.0",
                    "name": "FourthDevice",
                    "type": 1,
                    "query": "print todynamic('{TopDevices}')[3]",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  {
                    "id": "9a023fc0-b8b3-4e1e-9d9c-2c5c511cf32f",
                    "version": "KqlParameterItem/1.0",
                    "name": "FifthDevice",
                    "type": 1,
                    "query": "print todynamic('{TopDevices}')[4]",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  {
                    "id": "5619aab8-f9b6-4218-9315-c6741facf4eb",
                    "version": "KqlParameterItem/1.0",
                    "name": "SixthDevice",
                    "type": 1,
                    "query": "print todynamic('{TopDevices}')[5]",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  {
                    "id": "4dd8c03f-0ec4-494c-a237-ff5c9ab73f8f",
                    "version": "KqlParameterItem/1.0",
                    "name": "SeventhDevice",
                    "type": 1,
                    "query": "print todynamic('{TopDevices}')[6]",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  {
                    "id": "1a2455e4-36ec-46c9-bb3f-395ff1186abb",
                    "version": "KqlParameterItem/1.0",
                    "name": "EightDevice",
                    "type": 1,
                    "query": "print todynamic('{TopDevices}')[7]",
                    "timeContext": {
                      "durationMs": 2592000000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  {
                    "id": "72b22373-007c-4d10-bbdd-bdac49ea666c",
                    "version": "KqlParameterItem/1.0",
                    "name": "NinethDevice",
                    "type": 1,
                    "query": "print todynamic('{TopDevices}')[8]",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  {
                    "id": "eb44f209-d53b-488f-8275-05294b57b1c6",
                    "version": "KqlParameterItem/1.0",
                    "name": "TenthDevice",
                    "type": 1,
                    "query": "print todynamic('{TopDevices}')[9]",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  {
                    "id": "bb6a7aa4-0cf3-49d4-9649-179f6d60af71",
                    "version": "KqlParameterItem/1.0",
                    "name": "FirstMAC",
                    "type": 1,
                    "query": "print todynamic('{TopMAC}')[0]",
                    "timeContext": {
                      "durationMs": 2592000000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  {
                    "id": "571e7afc-50fc-4f35-a7cf-c1d23a00effe",
                    "version": "KqlParameterItem/1.0",
                    "name": "SecondMAC",
                    "type": 1,
                    "query": "print todynamic('{TopMAC}')[1]",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  {
                    "id": "00dca50c-6034-4a97-b1b0-da773ed535e7",
                    "version": "KqlParameterItem/1.0",
                    "name": "ThirdMAC",
                    "type": 1,
                    "query": "print todynamic('{TopMAC}')[2]",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  {
                    "id": "05752a54-7398-4373-9d67-bc5ce96c32a1",
                    "version": "KqlParameterItem/1.0",
                    "name": "FourthMAC",
                    "type": 1,
                    "query": "print todynamic('{TopMAC}')[3]",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  {
                    "id": "42233555-d975-4e88-b62e-2a53e728ae38",
                    "version": "KqlParameterItem/1.0",
                    "name": "FifthMAC",
                    "type": 1,
                    "query": "print todynamic('{TopMAC}')[4]",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  {
                    "id": "3a0eea52-845c-4347-b01b-6f4531de2d5c",
                    "version": "KqlParameterItem/1.0",
                    "name": "SixthMAC",
                    "type": 1,
                    "query": "print todynamic('{TopMAC}')[5]",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  {
                    "id": "29854b31-e4cd-4157-94d4-c0c3fef6f9a2",
                    "version": "KqlParameterItem/1.0",
                    "name": "SeventhMAC",
                    "type": 1,
                    "query": "print todynamic('{TopMAC}')[6]",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  {
                    "id": "959fdc81-126b-44f9-8a82-753bc8d5bebd",
                    "version": "KqlParameterItem/1.0",
                    "name": "EightMAC",
                    "type": 1,
                    "query": "print todynamic('{TopMAC}')[7]",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  {
                    "id": "78b51494-7bb5-4a7d-ab01-67483568319d",
                    "version": "KqlParameterItem/1.0",
                    "name": "NinethMAC",
                    "type": 1,
                    "query": "print todynamic('{TopMAC}')[8]",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  {
                    "id": "b66ac0ed-09b2-49e1-bead-88c1a1145f70",
                    "version": "KqlParameterItem/1.0",
                    "name": "TenthMAC",
                    "type": 1,
                    "query": "print todynamic('{TopMAC}')[9]",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  }
                ],
                "style": "pills",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces"
              },
              "conditionalVisibility": {
                "parameterName": "Hide",
                "comparison": "isNotEqualTo"
              },
              "name": "parameters - 18"
            },
            {
              "type": 12,
              "content": {
                "version": "NotebookGroup/1.0",
                "groupType": "editable",
                "title": "Top 10 Devices for Domain : {DestinationDnsDomain}",
                "items": [
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DNS\" and DeviceName == ('{FirstDevice}') and DestinationDnsDomain == ('{DestinationDnsDomain}')\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxDNSRCode:string, InfobloxB1Region:string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{User:escapejson}' == \"*\" or SourceUserName in~ ({User}))\r\nand ('{RecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({RecordType}))\r\nand ('{ResponseCode:escapejson}' == \"*\" or InfobloxDNSRCode in~ ({ResponseCode}))\r\nand ('{Asset:escapejson}' == \"*\" or DeviceName in~ ({Asset}))\r\nand ('{Location:escapejson}' == \"*\" or InfobloxB1Region in~ ({Location}))\r\n| summarize Count = count() by SourceIP\r\n| render piechart with(title=tostring(todynamic('{TopDevices}')[0]))\r\n\r\n\r\n\r\n\r\n",
                      "size": 4,
                      "showAnalytics": true,
                      "title": "Device : {FirstDevice} , MAC : {FirstMAC}",
                      "timeContextFromParameter": "TimeRange",
                      "showRefreshButton": true,
                      "showExportToExcel": true,
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "piechart",
                      "chartSettings": {
                        "showMetrics": false,
                        "showLegend": true
                      }
                    },
                    "customWidth": "33",
                    "conditionalVisibility": {
                      "parameterName": "FirstDevice",
                      "comparison": "isNotEqualTo"
                    },
                    "name": "query - 18",
                    "styleSettings": {
                      "showBorder": true
                    }
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DNS\" and DeviceName == ('{SecondDevice}') and DestinationDnsDomain == ('{DestinationDnsDomain}')\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxDNSRCode:string, InfobloxB1Region:string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{User:escapejson}' == \"*\" or SourceUserName in~ ({User}))\r\nand ('{RecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({RecordType}))\r\nand ('{ResponseCode:escapejson}' == \"*\" or InfobloxDNSRCode in~ ({ResponseCode}))\r\nand ('{Asset:escapejson}' == \"*\" or DeviceName in~ ({Asset}))\r\nand ('{Location:escapejson}' == \"*\" or InfobloxB1Region in~ ({Location}))\r\n| summarize Count = count() by SourceIP\r\n\r\n\r\n\r\n\r\n",
                      "size": 4,
                      "showAnalytics": true,
                      "title": "Device : {SecondDevice} , MAC : {SecondMAC}",
                      "timeContextFromParameter": "TimeRange",
                      "showRefreshButton": true,
                      "showExportToExcel": true,
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "piechart",
                      "chartSettings": {
                        "createOtherGroup": null,
                        "showMetrics": false,
                        "showLegend": true,
                        "ySettings": {
                          "numberFormatSettings": {
                            "unit": 0,
                            "options": {
                              "style": "decimal",
                              "useGrouping": true
                            }
                          }
                        }
                      }
                    },
                    "customWidth": "33",
                    "conditionalVisibility": {
                      "parameterName": "SecondDevice",
                      "comparison": "isNotEqualTo"
                    },
                    "name": "query - 1",
                    "styleSettings": {
                      "showBorder": true
                    }
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DNS\" and DeviceName == ('{ThirdDevice}') and DestinationDnsDomain == ('{DestinationDnsDomain}')\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxDNSRCode:string, InfobloxB1Region:string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{User:escapejson}' == \"*\" or SourceUserName in~ ({User}))\r\nand ('{RecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({RecordType}))\r\nand ('{ResponseCode:escapejson}' == \"*\" or InfobloxDNSRCode in~ ({ResponseCode}))\r\nand ('{Asset:escapejson}' == \"*\" or DeviceName in~ ({Asset}))\r\nand ('{Location:escapejson}' == \"*\" or InfobloxB1Region in~ ({Location}))\r\n| summarize Count = count() by SourceIP\r\n\r\n\r\n\r\n",
                      "size": 4,
                      "showAnalytics": true,
                      "title": "Device : {ThirdDevice} , MAC : {ThirdMAC}",
                      "timeContextFromParameter": "TimeRange",
                      "showRefreshButton": true,
                      "showExportToExcel": true,
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "piechart",
                      "chartSettings": {
                        "showMetrics": false,
                        "showLegend": true
                      }
                    },
                    "customWidth": "33",
                    "conditionalVisibility": {
                      "parameterName": "ThirdDevice",
                      "comparison": "isNotEqualTo"
                    },
                    "name": "query - 2",
                    "styleSettings": {
                      "showBorder": true
                    }
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DNS\" and DeviceName == ('{FourthDevice}') and DestinationDnsDomain == ('{DestinationDnsDomain}')\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxDNSRCode:string, InfobloxB1Region:string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{User:escapejson}' == \"*\" or SourceUserName in~ ({User}))\r\nand ('{RecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({RecordType}))\r\nand ('{ResponseCode:escapejson}' == \"*\" or InfobloxDNSRCode in~ ({ResponseCode}))\r\nand ('{Asset:escapejson}' == \"*\" or DeviceName in~ ({Asset}))\r\nand ('{Location:escapejson}' == \"*\" or InfobloxB1Region in~ ({Location}))\r\n| summarize Count = count() by SourceIP\r\n\r\n\r\n\r\n",
                      "size": 4,
                      "showAnalytics": true,
                      "title": "Device : {FourthDevice} , MAC : {FourthMAC}",
                      "timeContextFromParameter": "TimeRange",
                      "showRefreshButton": true,
                      "showExportToExcel": true,
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "piechart",
                      "chartSettings": {
                        "showMetrics": false,
                        "showLegend": true
                      }
                    },
                    "customWidth": "33",
                    "conditionalVisibility": {
                      "parameterName": "FourthDevice",
                      "comparison": "isNotEqualTo"
                    },
                    "name": "query - 3",
                    "styleSettings": {
                      "showBorder": true
                    }
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DNS\" and DeviceName == ('{FifthDevice}') and DestinationDnsDomain == ('{DestinationDnsDomain}')\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxDNSRCode:string, InfobloxB1Region:string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{User:escapejson}' == \"*\" or SourceUserName in~ ({User}))\r\nand ('{RecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({RecordType}))\r\nand ('{ResponseCode:escapejson}' == \"*\" or InfobloxDNSRCode in~ ({ResponseCode}))\r\nand ('{Asset:escapejson}' == \"*\" or DeviceName in~ ({Asset}))\r\nand ('{Location:escapejson}' == \"*\" or InfobloxB1Region in~ ({Location}))\r\n| summarize Count = count() by SourceIP\r\n\r\n\r\n\r\n",
                      "size": 4,
                      "showAnalytics": true,
                      "title": "Device : {FifthDevice} , MAC : {FifthMAC}",
                      "timeContextFromParameter": "TimeRange",
                      "showRefreshButton": true,
                      "showExportToExcel": true,
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "piechart"
                    },
                    "customWidth": "33",
                    "conditionalVisibility": {
                      "parameterName": "FifthDevice",
                      "comparison": "isNotEqualTo"
                    },
                    "name": "query - 4",
                    "styleSettings": {
                      "showBorder": true
                    }
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DNS\" and DeviceName == ('{SixthDevice}') and DestinationDnsDomain == ('{DestinationDnsDomain}')\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxDNSRCode:string, InfobloxB1Region:string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{User:escapejson}' == \"*\" or SourceUserName in~ ({User}))\r\nand ('{RecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({RecordType}))\r\nand ('{ResponseCode:escapejson}' == \"*\" or InfobloxDNSRCode in~ ({ResponseCode}))\r\nand ('{Asset:escapejson}' == \"*\" or DeviceName in~ ({Asset}))\r\nand ('{Location:escapejson}' == \"*\" or InfobloxB1Region in~ ({Location}))\r\n| summarize Count = count() by SourceIP\r\n\r\n\r\n\r\n",
                      "size": 4,
                      "showAnalytics": true,
                      "title": "Device : {SixthDevice} , MAC : {SixthMAC}",
                      "timeContextFromParameter": "TimeRange",
                      "showRefreshButton": true,
                      "showExportToExcel": true,
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "piechart"
                    },
                    "customWidth": "33",
                    "conditionalVisibility": {
                      "parameterName": "SixthDevice",
                      "comparison": "isNotEqualTo"
                    },
                    "name": "query - 5",
                    "styleSettings": {
                      "showBorder": true
                    }
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DNS\" and DeviceName == ('{SeventhDevice}') and DestinationDnsDomain == ('{DestinationDnsDomain}')\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxDNSRCode:string, InfobloxB1Region:string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{User:escapejson}' == \"*\" or SourceUserName in~ ({User}))\r\nand ('{RecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({RecordType}))\r\nand ('{ResponseCode:escapejson}' == \"*\" or InfobloxDNSRCode in~ ({ResponseCode}))\r\nand ('{Asset:escapejson}' == \"*\" or DeviceName in~ ({Asset}))\r\nand ('{Location:escapejson}' == \"*\" or InfobloxB1Region in~ ({Location}))\r\n| summarize Count = count() by SourceIP\r\n\r\n\r\n\r\n",
                      "size": 4,
                      "showAnalytics": true,
                      "title": "Device : {SeventhDevice} , MAC : {SeventhMAC}",
                      "timeContextFromParameter": "TimeRange",
                      "showRefreshButton": true,
                      "showExportToExcel": true,
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "piechart"
                    },
                    "customWidth": "33",
                    "conditionalVisibility": {
                      "parameterName": "SeventhDevice",
                      "comparison": "isNotEqualTo"
                    },
                    "name": "query - 6",
                    "styleSettings": {
                      "showBorder": true
                    }
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DNS\" and DeviceName == ('{EightDevice}') and DestinationDnsDomain == ('{DestinationDnsDomain}')\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxDNSRCode:string, InfobloxB1Region:string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{User:escapejson}' == \"*\" or SourceUserName in~ ({User}))\r\nand ('{RecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({RecordType}))\r\nand ('{ResponseCode:escapejson}' == \"*\" or InfobloxDNSRCode in~ ({ResponseCode}))\r\nand ('{Asset:escapejson}' == \"*\" or DeviceName in~ ({Asset}))\r\nand ('{Location:escapejson}' == \"*\" or InfobloxB1Region in~ ({Location}))\r\n| summarize Count = count() by SourceIP\r\n\r\n\r\n\r\n",
                      "size": 4,
                      "showAnalytics": true,
                      "title": "Device : {EightDevice} , MAC : {EightMAC}",
                      "timeContextFromParameter": "TimeRange",
                      "showRefreshButton": true,
                      "showExportToExcel": true,
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "piechart"
                    },
                    "customWidth": "33",
                    "conditionalVisibility": {
                      "parameterName": "EightDevice",
                      "comparison": "isNotEqualTo"
                    },
                    "name": "query - 7",
                    "styleSettings": {
                      "showBorder": true
                    }
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DNS\" and DeviceName == ('{NinethDevice}') and DestinationDnsDomain == ('{DestinationDnsDomain}')\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxDNSRCode:string, InfobloxB1Region:string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{User:escapejson}' == \"*\" or SourceUserName in~ ({User}))\r\nand ('{RecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({RecordType}))\r\nand ('{ResponseCode:escapejson}' == \"*\" or InfobloxDNSRCode in~ ({ResponseCode}))\r\nand ('{Asset:escapejson}' == \"*\" or DeviceName in~ ({Asset}))\r\nand ('{Location:escapejson}' == \"*\" or InfobloxB1Region in~ ({Location}))\r\n| summarize Count = count() by SourceIP\r\n\r\n\r\n\r\n",
                      "size": 4,
                      "showAnalytics": true,
                      "title": "Device : {NinethDevice} , MAC : {NinethMAC}",
                      "timeContextFromParameter": "TimeRange",
                      "showRefreshButton": true,
                      "showExportToExcel": true,
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "piechart"
                    },
                    "customWidth": "33",
                    "conditionalVisibility": {
                      "parameterName": "NinethDevice",
                      "comparison": "isNotEqualTo"
                    },
                    "name": "query - 8",
                    "styleSettings": {
                      "showBorder": true
                    }
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DNS\" and DeviceName == ('{TenthDevice}') and DestinationDnsDomain == ('{DestinationDnsDomain}')\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxDNSRCode:string, InfobloxB1Region:string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{User:escapejson}' == \"*\" or SourceUserName in~ ({User}))\r\nand ('{RecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({RecordType}))\r\nand ('{ResponseCode:escapejson}' == \"*\" or InfobloxDNSRCode in~ ({ResponseCode}))\r\nand ('{Asset:escapejson}' == \"*\" or DeviceName in~ ({Asset}))\r\nand ('{Location:escapejson}' == \"*\" or InfobloxB1Region in~ ({Location}))\r\n| summarize Count = count() by SourceIP\r\n\r\n\r\n\r\n",
                      "size": 4,
                      "showAnalytics": true,
                      "title": "Device : {TenthDevice} , MAC : {TenthMAC}",
                      "timeContextFromParameter": "TimeRange",
                      "showRefreshButton": true,
                      "showExportToExcel": true,
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "piechart"
                    },
                    "customWidth": "33",
                    "conditionalVisibility": {
                      "parameterName": "TenthDevice",
                      "comparison": "isNotEqualTo"
                    },
                    "name": "query - 9",
                    "styleSettings": {
                      "showBorder": true
                    }
                  }
                ]
              },
              "conditionalVisibility": {
                "parameterName": "DestinationDnsDomain",
                "comparison": "isNotEqualTo"
              },
              "name": "group - 19"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DNS\" and SourceUserName == ('{SourceUserName}')\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxDNSRCode:string, InfobloxB1Region:string, InfobloxDNSView:string, InfobloxDNSQClass:string, InfobloxDNSQFlags:string, InfobloxAnCount:string, InfobloxNsCount:string, InfobloxArCount:string, InfobloxB1ConnectionType:string, InfobloxB1OPHName:string, InfobloxB1OPHIPAddress:string, InfobloxB1Network:string, InfobloxB1SrcOSVersion:string, InfobloxB1DHCPFingerprint:string, InfobloxB1DNSTags:string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{RecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({RecordType}))\r\nand ('{ResponseCode:escapejson}' == \"*\" or InfobloxDNSRCode in~ ({ResponseCode}))\r\nand ('{Asset:escapejson}' == \"*\" or DeviceName in~ ({Asset}))\r\nand ('{Location:escapejson}' == \"*\" or InfobloxB1Region in~ ({Location}))\r\n| extend DestinationDnsDomain_ = trim_end(@'.',DestinationDnsDomain)\r\n| extend domains = split(DestinationDnsDomain_,'.')\r\n| extend SecondLevelDomain =strcat(domains[-2],'.',domains[-1])\r\n| where ('{SLD:escapejson}' == \"*\" or SecondLevelDomain in~ ({SLD}))\r\n| project TimeGenerated, DestinationDnsDomain, DeviceName, DeviceAddress, SourceIP, SourcePort, Activity, LogSeverity, Protocol, AdditionalExtensions, DeviceEventClassID, ApplicationProtocol, InfobloxDNSQType, InfobloxDNSRCode, InfobloxB1Region, InfobloxDNSView, InfobloxDNSQClass, InfobloxDNSQFlags, InfobloxAnCount, InfobloxNsCount, InfobloxArCount, InfobloxB1ConnectionType, InfobloxB1OPHName, InfobloxB1OPHIPAddress, InfobloxB1Network, InfobloxB1SrcOSVersion, InfobloxB1DHCPFingerprint, InfobloxB1DNSTags\r\n",
                "size": 0,
                "showAnalytics": true,
                "title": "DNS Requests made by User : {SourceUserName}",
                "timeContextFromParameter": "TimeRange",
                "showRefreshButton": true,
                "showExportToExcel": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "table",
                "gridSettings": {
                  "rowLimit": 10000,
                  "filter": true
                }
              },
              "customWidth": "50",
              "conditionalVisibility": {
                "parameterName": "SourceUserName",
                "comparison": "isNotEqualTo"
              },
              "name": "query - 15",
              "styleSettings": {
                "margin": "5px",
                "maxWidth": "50",
                "showBorder": true
              }
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DNS\" and SourceUserName == ('{SourceUserName}')\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxDNSRCode:string, InfobloxB1Region:string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{RecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({RecordType}))\r\nand ('{ResponseCode:escapejson}' == \"*\" or InfobloxDNSRCode in~ ({ResponseCode}))\r\nand ('{Asset:escapejson}' == \"*\" or DeviceName in~ ({Asset}))\r\nand ('{Location:escapejson}' == \"*\" or InfobloxB1Region in~ ({Location}))\r\n| extend DestinationDnsDomain_ = trim_end(@'.',DestinationDnsDomain)\r\n| extend domains = split(DestinationDnsDomain_,'.')\r\n| extend SecondLevelDomain =strcat(domains[-2],'.',domains[-1])\r\n| where ('{SLD:escapejson}' == \"*\" or SecondLevelDomain in~ ({SLD}))\r\n| summarize Count = count() by DestinationDnsDomain\r\n| top 10 by Count",
                "size": 3,
                "showAnalytics": true,
                "title": "Top 10 Requested Domains by User : {SourceUserName}",
                "timeContextFromParameter": "TimeRange",
                "showRefreshButton": true,
                "showExportToExcel": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "piechart",
                "gridSettings": {
                  "formatters": [
                    {
                      "columnMatch": "Count",
                      "formatter": 4,
                      "formatOptions": {
                        "palette": "blue"
                      }
                    }
                  ]
                },
                "tileSettings": {
                  "showBorder": false,
                  "titleContent": {
                    "columnMatch": "DestinationDnsDomain",
                    "formatter": 1
                  },
                  "leftContent": {
                    "columnMatch": "Count",
                    "formatter": 12,
                    "formatOptions": {
                      "palette": "auto"
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "maximumSignificantDigits": 3,
                        "maximumFractionDigits": 2
                      }
                    }
                  }
                },
                "chartSettings": {
                  "group": "DestinationDnsDomain",
                  "createOtherGroup": 10,
                  "showMetrics": false,
                  "showLegend": true
                }
              },
              "customWidth": "50",
              "conditionalVisibility": {
                "parameterName": "SourceUserName",
                "comparison": "isNotEqualTo"
              },
              "name": "query - 8",
              "styleSettings": {
                "margin": "5px",
                "padding": "68px",
                "maxWidth": "50",
                "showBorder": true
              }
            },
            {
              "type": 12,
              "content": {
                "version": "NotebookGroup/1.0",
                "groupType": "editable",
                "items": [
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DNS\"\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxDNSRCode:string, InfobloxB1Region:string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{User:escapejson}' == \"*\" or SourceUserName in~ ({User}))\r\nand ('{RecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({RecordType}))\r\nand ('{ResponseCode:escapejson}' == \"*\" or InfobloxDNSRCode in~ ({ResponseCode}))\r\nand ('{Asset:escapejson}' == \"*\" or DeviceName in~ ({Asset}))\r\nand ('{Location:escapejson}' == \"*\" or InfobloxB1Region in~ ({Location}))\r\n| extend DestinationDnsDomain_ = trim_end(@'.',DestinationDnsDomain)\r\n| extend domains = split(DestinationDnsDomain_,'.')\r\n| extend SecondLevelDomain =strcat(domains[-2],'.',domains[-1])\r\n| where ('{SLD:escapejson}' == \"*\" or SecondLevelDomain in~ ({SLD}))\r\n| sort by TimeGenerated asc\r\n|make-series Count = count() default = 0 on TimeGenerated from ago(1d) to now() step 1h by InfobloxDNSRCode",
                      "size": 0,
                      "title": "Overall Queries Per Hour",
                      "timeContext": {
                        "durationMs": 86400000
                      },
                      "exportFieldName": "x",
                      "exportParameterName": "QPS_Time",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "barchart",
                      "chartSettings": {
                        "showLegend": true,
                        "showDataPoints": true,
                        "xSettings": {
                          "label": "Time"
                        }
                      }
                    },
                    "name": "query - 11",
                    "styleSettings": {
                      "margin": "5px",
                      "showBorder": true
                    }
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "💡 _Click on a 'Overall Queries Per Hour' Bar to see 'Queries Per Minutes' for that specific Hour."
                    },
                    "conditionalVisibility": {
                      "parameterName": "QPS_Time",
                      "comparison": "isEqualTo"
                    },
                    "name": "text - 20",
                    "styleSettings": {
                      "margin": "5px"
                    }
                  }
                ],
                "exportParameters": true
              },
              "customWidth": "50",
              "name": "group - 21"
            },
            {
              "type": 12,
              "content": {
                "version": "NotebookGroup/1.0",
                "groupType": "editable",
                "items": [
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DNS\"\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxDNSRCode:string, InfobloxB1Region:string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{User:escapejson}' == \"*\" or SourceUserName in~ ({User}))\r\nand ('{RecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({RecordType}))\r\nand ('{ResponseCode:escapejson}' == \"*\" or InfobloxDNSRCode in~ ({ResponseCode}))\r\nand ('{Asset:escapejson}' == \"*\" or DeviceName in~ ({Asset}))\r\nand ('{Location:escapejson}' == \"*\" or InfobloxB1Region in~ ({Location}))\r\n| extend DestinationDnsDomain_ = trim_end(@'.',DestinationDnsDomain)\r\n| extend domains = split(DestinationDnsDomain_,'.')\r\n| extend SecondLevelDomain =strcat(domains[-2],'.',domains[-1])\r\n| where ('{SLD:escapejson}' == \"*\" or SecondLevelDomain in~ ({SLD}))\r\n| summarize count() by InfobloxDNSRCode",
                      "size": 3,
                      "showAnalytics": true,
                      "title": "Types of Response",
                      "timeContextFromParameter": "TimeRange",
                      "showRefreshButton": true,
                      "exportFieldName": "series",
                      "exportParameterName": "Response_Type",
                      "showExportToExcel": true,
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "piechart",
                      "gridSettings": {
                        "rowLimit": 10000
                      },
                      "chartSettings": {
                        "showMetrics": false,
                        "showLegend": true
                      }
                    },
                    "customWidth": "100",
                    "name": "query - 9",
                    "styleSettings": {
                      "margin": "5px",
                      "padding": "49px",
                      "maxWidth": "50",
                      "showBorder": true
                    }
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "💡 _Click on a 'Types of Response' pie chart to see 'DNS Requests' and 'Top 20 Devices' for that specific Type.\r\n"
                    },
                    "conditionalVisibility": {
                      "parameterName": "Response_Type",
                      "comparison": "isEqualTo"
                    },
                    "name": "text - 1"
                  }
                ],
                "exportParameters": true
              },
              "customWidth": "50",
              "name": "group - 17"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "let Gridtimestring = tostring('{QPS_Time}');\r\nlet Gridtime = todatetime(substring(Gridtimestring, indexof(Gridtimestring, \" \"), indexof(Gridtimestring, \"GMT\") - 1 - indexof(Gridtimestring, \" \"))) -5h - 30m;\r\n\r\nCommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DNS\" \r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxDNSRCode:string, InfobloxB1Region:string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{User:escapejson}' == \"*\" or SourceUserName in~ ({User}))\r\nand ('{RecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({RecordType}))\r\nand ('{ResponseCode:escapejson}' == \"*\" or InfobloxDNSRCode in~ ({ResponseCode}))\r\nand ('{Asset:escapejson}' == \"*\" or DeviceName in~ ({Asset}))\r\nand ('{Location:escapejson}' == \"*\" or InfobloxB1Region in~ ({Location}))\r\n| extend DestinationDnsDomain_ = trim_end(@'.',DestinationDnsDomain)\r\n| extend domains = split(DestinationDnsDomain_,'.')\r\n| extend SecondLevelDomain =strcat(domains[-2],'.',domains[-1])\r\n| where ('{SLD:escapejson}' == \"*\" or SecondLevelDomain in~ ({SLD}))\r\n| where TimeGenerated between (Gridtime - 30m .. Gridtime + 30m)\r\n//| project Gridtimestring, Gridtime, TimeGenerated\r\n| sort by TimeGenerated asc\r\n//| project TimeGenerated\r\n| make-series Count = count() default = 0 on bin(TimeGenerated, 1m) from (Gridtime - 30m) to (Gridtime + 30m) step 1m by InfobloxDNSRCode",
                "size": 0,
                "showAnalytics": true,
                "title": "Overall Queries Per Minute",
                "timeContext": {
                  "durationMs": 86400000
                },
                "showRefreshButton": true,
                "showExportToExcel": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "barchart",
                "gridSettings": {
                  "rowLimit": 10000
                },
                "sortBy": [],
                "chartSettings": {
                  "seriesLabelSettings": [
                    {
                      "seriesName": "Count",
                      "color": "blueDark"
                    }
                  ]
                }
              },
              "customWidth": "50",
              "conditionalVisibility": {
                "parameterName": "QPS_Time",
                "comparison": "isNotEqualTo"
              },
              "name": "query - 13",
              "styleSettings": {
                "margin": "5px",
                "showBorder": true
              }
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "let Gridtimestring = tostring('{QPS_Time}');\r\nlet Gridtime = todatetime(substring(Gridtimestring, indexof(Gridtimestring, \" \"), indexof(Gridtimestring, \"GMT\") - 1 - indexof(Gridtimestring, \" \"))) -5h - 30m;\r\n\r\nCommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DNS\"\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxDNSRCode:string, InfobloxB1Region:string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{User:escapejson}' == \"*\" or SourceUserName in~ ({User}))\r\nand ('{RecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({RecordType}))\r\nand ('{ResponseCode:escapejson}' == \"*\" or InfobloxDNSRCode in~ ({ResponseCode}))\r\nand ('{Asset:escapejson}' == \"*\" or DeviceName in~ ({Asset}))\r\nand ('{Location:escapejson}' == \"*\" or InfobloxB1Region in~ ({Location}))\r\nand TimeGenerated between ((Gridtime - 30m) .. (Gridtime + 30m))\r\n| extend DestinationDnsDomain_ = trim_end(@'.',DestinationDnsDomain)\r\n| extend domains = split(DestinationDnsDomain_,'.')\r\n| extend SecondLevelDomain =strcat(domains[-2],'.',domains[-1])\r\n| where ('{SLD:escapejson}' == \"*\" or SecondLevelDomain in~ ({SLD}))\r\n| summarize Count = count() by DeviceName",
                "size": 3,
                "showAnalytics": true,
                "title": "Overall Query by Devices per hour",
                "timeContext": {
                  "durationMs": 86400000
                },
                "showRefreshButton": true,
                "showExportToExcel": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "piechart",
                "chartSettings": {
                  "createOtherGroup": 10,
                  "showMetrics": false,
                  "showLegend": true
                }
              },
              "customWidth": "50",
              "conditionalVisibility": {
                "parameterName": "QPS_Time",
                "comparison": "isNotEqualTo"
              },
              "name": "query - 17",
              "styleSettings": {
                "padding": "52px",
                "showBorder": true
              }
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DNS\"\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxDNSRCode:string, InfobloxB1Region:string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{User:escapejson}' == \"*\" or SourceUserName in~ ({User}))\r\nand ('{RecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({RecordType}))\r\nand ('{ResponseCode:escapejson}' == \"*\" or InfobloxDNSRCode in~ ({ResponseCode}))\r\nand ('{Asset:escapejson}' == \"*\" or DeviceName in~ ({Asset}))\r\nand ('{Location:escapejson}' == \"*\" or InfobloxB1Region in~ ({Location}))\r\nand InfobloxDNSRCode == ('{Response_Type}')\r\n| extend DestinationDnsDomain_ = trim_end(@'.',DestinationDnsDomain)\r\n| extend domains = split(DestinationDnsDomain_,'.')\r\n| extend SecondLevelDomain =strcat(domains[-2],'.',domains[-1])\r\n| where ('{SLD:escapejson}' == \"*\" or SecondLevelDomain in~ ({SLD}))\r\n| project TimeGenerated, DestinationDnsDomain, DeviceAddress, DeviceName, SourceIP, SourcePort, Activity, LogSeverity, Protocol, AdditionalExtensions, DeviceEventClassID, ApplicationProtocol\r\n",
                "size": 0,
                "showAnalytics": true,
                "title": "{Response_Type} DNS Requests",
                "timeContextFromParameter": "TimeRange",
                "showRefreshButton": true,
                "showExportToExcel": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "table",
                "gridSettings": {
                  "rowLimit": 10000,
                  "filter": true
                }
              },
              "customWidth": "50",
              "conditionalVisibility": {
                "parameterName": "Response_Type",
                "comparison": "isNotEqualTo"
              },
              "name": "query - 16",
              "styleSettings": {
                "padding": "17px",
                "showBorder": true
              }
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DNS\"\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxDNSRCode:string, InfobloxB1Region:string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{User:escapejson}' == \"*\" or SourceUserName in~ ({User}))\r\nand ('{RecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({RecordType}))\r\nand ('{ResponseCode:escapejson}' == \"*\" or InfobloxDNSRCode in~ ({ResponseCode}))\r\nand ('{Asset:escapejson}' == \"*\" or DeviceName in~ ({Asset}))\r\nand ('{Location:escapejson}' == \"*\" or InfobloxB1Region in~ ({Location}))\r\nand InfobloxDNSRCode == ('{Response_Type}')\r\n| extend DestinationDnsDomain_ = trim_end(@'.',DestinationDnsDomain)\r\n| extend domains = split(DestinationDnsDomain_,'.')\r\n| extend SecondLevelDomain =strcat(domains[-2],'.',domains[-1])\r\n| where ('{SLD:escapejson}' == \"*\" or SecondLevelDomain in~ ({SLD}))\r\n| summarize Count = count() by DeviceName\r\n| top 20 by Count\r\n",
                "size": 3,
                "showAnalytics": true,
                "title": "Top 20 Devices for {Response_Type} DNS Request",
                "timeContextFromParameter": "TimeRange",
                "showRefreshButton": true,
                "showExportToExcel": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "piechart",
                "chartSettings": {
                  "createOtherGroup": 20,
                  "showMetrics": false,
                  "showLegend": true
                }
              },
              "customWidth": "50",
              "conditionalVisibility": {
                "parameterName": "Response_Type",
                "comparison": "isNotEqualTo"
              },
              "name": "query - 17",
              "styleSettings": {
                "showBorder": true
              }
            },
            {
              "type": 12,
              "content": {
                "version": "NotebookGroup/1.0",
                "groupType": "editable",
                "items": [
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DNS\"\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxDNSRCode:string, InfobloxB1Region:string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{User:escapejson}' == \"*\" or SourceUserName in~ ({User}))\r\nand ('{RecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({RecordType}))\r\nand ('{ResponseCode:escapejson}' == \"*\" or InfobloxDNSRCode in~ ({ResponseCode}))\r\nand ('{Asset:escapejson}' == \"*\" or DeviceName in~ ({Asset}))\r\nand ('{Location:escapejson}' == \"*\" or InfobloxB1Region in~ ({Location}))\r\nand isnotempty(InfobloxB1Region)\r\n| extend DestinationDnsDomain_ = trim_end(@'.',DestinationDnsDomain)\r\n| extend domains = split(DestinationDnsDomain_,'.')\r\n| extend SecondLevelDomain =strcat(domains[-2],'.',domains[-1])\r\n| where ('{SLD:escapejson}' == \"*\" or SecondLevelDomain in~ ({SLD}))\r\n| project-rename Location = InfobloxB1Region\r\n| summarize Count = count() by Location",
                      "size": 3,
                      "showAnalytics": true,
                      "title": "Queries Per Location",
                      "timeContextFromParameter": "TimeRange",
                      "showRefreshButton": true,
                      "exportFieldName": "series",
                      "exportParameterName": "QPS_Location",
                      "showExportToExcel": true,
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "piechart",
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "Count",
                            "formatter": 4,
                            "formatOptions": {
                              "palette": "blue"
                            }
                          },
                          {
                            "columnMatch": "QueryCount",
                            "formatter": 3,
                            "formatOptions": {
                              "palette": "blue"
                            }
                          }
                        ],
                        "rowLimit": 10000,
                        "filter": true
                      },
                      "chartSettings": {
                        "showMetrics": false,
                        "showLegend": true
                      },
                      "mapSettings": {
                        "locInfo": "CountryRegion",
                        "locInfoColumn": "Location",
                        "sizeSettings": "Count",
                        "sizeAggregation": "Sum",
                        "labelSettings": "Location",
                        "legendMetric": "Count",
                        "legendAggregation": "Sum",
                        "itemColorSettings": {
                          "nodeColorField": "Count",
                          "colorAggregation": "Sum",
                          "type": "heatmap",
                          "heatmapPalette": "greenRed"
                        }
                      }
                    },
                    "name": "query - 6",
                    "styleSettings": {
                      "margin": "5px",
                      "padding": "49px",
                      "showBorder": true
                    }
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "💡 _Click on a 'Queries Per Location' pie chart to see 'Queries per Location per Hour'."
                    },
                    "conditionalVisibility": {
                      "parameterName": "QPS_Location",
                      "comparison": "isEqualTo"
                    },
                    "name": "text - 21",
                    "styleSettings": {
                      "margin": "5px"
                    }
                  }
                ],
                "exportParameters": true
              },
              "customWidth": "50",
              "name": "group - 22",
              "styleSettings": {
                "margin": "5px",
                "maxWidth": "50"
              }
            },
            {
              "type": 12,
              "content": {
                "version": "NotebookGroup/1.0",
                "groupType": "editable",
                "items": [
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DNS\"\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxDNSRCode:string, InfobloxB1Region:string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{User:escapejson}' == \"*\" or SourceUserName in~ ({User}))\r\nand ('{RecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({RecordType}))\r\nand ('{ResponseCode:escapejson}' == \"*\" or InfobloxDNSRCode in~ ({ResponseCode}))\r\nand ('{Asset:escapejson}' == \"*\" or DeviceName in~ ({Asset}))\r\nand InfobloxB1Region == ('{QPS_Location}')\r\nand isnotempty(InfobloxB1Region)\r\n| extend DestinationDnsDomain_ = trim_end(@'.',DestinationDnsDomain)\r\n| extend domains = split(DestinationDnsDomain_,'.')\r\n| extend SecondLevelDomain =strcat(domains[-2],'.',domains[-1])\r\n| where ('{SLD:escapejson}' == \"*\" or SecondLevelDomain in~ ({SLD}))\r\n| project-rename Location = InfobloxB1Region\r\n| sort by TimeGenerated asc\r\n|make-series Count = count() default = 0 on TimeGenerated from ago(1d) to now() step 1h by InfobloxDNSRCode",
                      "size": 0,
                      "showAnalytics": true,
                      "title": "Queries Per Location : {QPS_Location} Per Hour",
                      "timeContext": {
                        "durationMs": 86400000
                      },
                      "showRefreshButton": true,
                      "exportFieldName": "x",
                      "exportParameterName": "Time_Location",
                      "showExportToExcel": true,
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "barchart"
                    },
                    "name": "query - 13",
                    "styleSettings": {
                      "margin": "5px",
                      "showBorder": true
                    }
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "💡 _Click on a 'Queries Per Location Per Hour' Bar to see 'Queries Per Location per Minutes' for that specific Hour."
                    },
                    "conditionalVisibility": {
                      "parameterName": "Time_Location",
                      "comparison": "isEqualTo"
                    },
                    "name": "text - 1"
                  }
                ],
                "exportParameters": true
              },
              "customWidth": "50",
              "conditionalVisibility": {
                "parameterName": "QPS_Location",
                "comparison": "isNotEqualTo"
              },
              "name": "group - 20"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "let Gridtimestring = tostring('{Time_Location}');\r\nlet Gridtime = todatetime(substring(Gridtimestring, indexof(Gridtimestring, \" \"), indexof(Gridtimestring, \"GMT\") - 1 - indexof(Gridtimestring, \" \"))) -5h - 30m;\r\n\r\nCommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DNS\" \r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxDNSRCode:string, InfobloxB1Region:string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{User:escapejson}' == \"*\" or SourceUserName in~ ({User}))\r\nand ('{RecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({RecordType}))\r\nand ('{ResponseCode:escapejson}' == \"*\" or InfobloxDNSRCode in~ ({ResponseCode}))\r\nand ('{Asset:escapejson}' == \"*\" or DeviceName in~ ({Asset}))\r\nand InfobloxB1Region == ('{QPS_Location}')\r\n| extend DestinationDnsDomain_ = trim_end(@'.',DestinationDnsDomain)\r\n| extend domains = split(DestinationDnsDomain_,'.')\r\n| extend SecondLevelDomain =strcat(domains[-2],'.',domains[-1])\r\n| where ('{SLD:escapejson}' == \"*\" or SecondLevelDomain in~ ({SLD}))\r\n//| project Gridtimestring, Gridtime, TimeGenerated\r\n| where TimeGenerated between (Gridtime - 30m .. Gridtime + 30m)\r\n| sort by TimeGenerated asc\r\n//| project TimeGenerated\r\n| make-series Count = count() default = 0 on bin(TimeGenerated, 1m) from (Gridtime - 30m) to (Gridtime + 30m) step 1m by InfobloxDNSRCode",
                "size": 0,
                "showAnalytics": true,
                "title": "Queries Per Location : {QPS_Location} Per Minute",
                "timeContext": {
                  "durationMs": 86400000
                },
                "showRefreshButton": true,
                "showExportToExcel": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "barchart"
              },
              "conditionalVisibility": {
                "parameterName": "Time_Location",
                "comparison": "isNotEqualTo"
              },
              "name": "query - 17",
              "styleSettings": {
                "showBorder": true
              }
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DNS\"\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxDNSRCode:string, InfobloxB1Region:string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{User:escapejson}' == \"*\" or SourceUserName in~ ({User}))\r\nand ('{RecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({RecordType}))\r\nand ('{ResponseCode:escapejson}' == \"*\" or InfobloxDNSRCode in~ ({ResponseCode}))\r\nand ('{Asset:escapejson}' == \"*\" or DeviceName in~ ({Asset}))\r\nand ('{Location:escapejson}' == \"*\" or InfobloxB1Region in~ ({Location}))\r\n| extend DestinationDnsDomain_ = trim_end(@'.',DestinationDnsDomain)\r\n| extend domains = split(DestinationDnsDomain_,'.')\r\n| extend SecondLevelDomain =strcat(domains[-2],'.',domains[-1])\r\n| where ('{SLD:escapejson}' == \"*\" or SecondLevelDomain in~ ({SLD}))\r\n| summarize count() by InfobloxDNSQType\r\n\r\n",
                "size": 3,
                "showAnalytics": true,
                "title": "Types of Query",
                "timeContextFromParameter": "TimeRange",
                "showRefreshButton": true,
                "showExportToExcel": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "piechart",
                "chartSettings": {
                  "showMetrics": false,
                  "showLegend": true
                }
              },
              "customWidth": "50",
              "name": "query - 10",
              "styleSettings": {
                "margin": "5px",
                "padding": "49px",
                "maxWidth": "50",
                "showBorder": true
              }
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DNS\"\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxDNSRCode:string, InfobloxB1Region:string, InfobloxDNSView:string, InfobloxDNSQClass:string, InfobloxDNSQFlags:string, InfobloxAnCount:string, InfobloxNsCount:string, InfobloxArCount:string, InfobloxB1ConnectionType:string, InfobloxB1OPHName:string, InfobloxB1OPHIPAddress:string, InfobloxB1Network:string, InfobloxB1SrcOSVersion:string, InfobloxB1DHCPFingerprint:string, InfobloxB1DNSTags:string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{User:escapejson}' == \"*\" or SourceUserName in~ ({User}))\r\nand ('{RecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({RecordType}))\r\nand ('{ResponseCode:escapejson}' == \"*\" or InfobloxDNSRCode in~ ({ResponseCode}))\r\nand ('{Asset:escapejson}' == \"*\" or DeviceName in~ ({Asset}))\r\nand ('{Location:escapejson}' == \"*\" or InfobloxB1Region in~ ({Location}))\r\n| extend DestinationDnsDomain_ = trim_end(@'.',DestinationDnsDomain)\r\n| extend domains = split(DestinationDnsDomain_,'.')\r\n| extend SecondLevelDomain =strcat(domains[-2],'.',domains[-1])\r\n| where ('{SLD:escapejson}' == \"*\" or SecondLevelDomain in~ ({SLD}))\r\n| project-rename User = SourceUserName\r\n| project TimeGenerated, User, DeviceName, DeviceAddress, SourceIP, SourcePort, Activity, LogSeverity, DestinationDnsDomain, Protocol, AdditionalExtensions, DeviceEventClassID, ApplicationProtocol, InfobloxDNSQType, InfobloxDNSRCode, InfobloxB1Region, InfobloxDNSView, InfobloxDNSQClass, InfobloxDNSQFlags, InfobloxAnCount, InfobloxNsCount, InfobloxArCount, InfobloxB1ConnectionType, InfobloxB1OPHName, InfobloxB1OPHIPAddress, InfobloxB1Network, InfobloxB1SrcOSVersion, InfobloxB1DHCPFingerprint, InfobloxB1DNSTags\r\n",
                "size": 0,
                "showAnalytics": true,
                "title": "DNS Requests",
                "timeContextFromParameter": "TimeRange",
                "showRefreshButton": true,
                "showExportToExcel": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "table",
                "gridSettings": {
                  "formatters": [
                    {
                      "columnMatch": "LogSeverity",
                      "formatter": 4,
                      "formatOptions": {
                        "palette": "yellowOrangeRed"
                      }
                    },
                    {
                      "columnMatch": "InfobloxAnCount",
                      "formatter": 4,
                      "formatOptions": {
                        "min": 0,
                        "palette": "yellowGreenBlue"
                      }
                    },
                    {
                      "columnMatch": "InfobloxNsCount",
                      "formatter": 4,
                      "formatOptions": {
                        "min": 0,
                        "palette": "yellowOrangeBrown"
                      }
                    },
                    {
                      "columnMatch": "InfobloxArCount",
                      "formatter": 4,
                      "formatOptions": {
                        "min": 0,
                        "palette": "yellowOrangeRed"
                      }
                    },
                    {
                      "columnMatch": "SourceUserName",
                      "formatter": 18,
                      "formatOptions": {
                        "thresholdsOptions": "colors",
                        "thresholdsGrid": [
                          {
                            "operator": "!=",
                            "representation": "brown",
                            "text": "{0}{1}"
                          },
                          {
                            "operator": "Default",
                            "thresholdValue": null,
                            "representation": "lightBlue",
                            "text": "{0}{1}"
                          }
                        ]
                      }
                    }
                  ],
                  "rowLimit": 10000,
                  "filter": true
                }
              },
              "name": "query - 14",
              "styleSettings": {
                "showBorder": true
              }
            }
          ]
        },
        "conditionalVisibility": {
          "parameterName": "Parameter",
          "comparison": "isEqualTo",
          "value": "1"
        },
        "name": "Main Group",
        "styleSettings": {
          "margin": "5px"
        }
      },
      {
        "type": 12,
        "content": {
          "version": "NotebookGroup/1.0",
          "groupType": "editable",
          "items": [
            {
              "type": 1,
              "content": {
                "json": "This 'DHCP' Tab depends on 'Get-IP-Space-Data' Logic App, which is deployed with the Microsoft Sentinel Solution.",
                "style": "info"
              },
              "name": "text - 15"
            },
            {
              "type": 9,
              "content": {
                "version": "KqlParameterItem/1.0",
                "parameters": [
                  {
                    "id": "4abe4038-7e69-4b2c-9ec2-e1f9311e96be",
                    "version": "KqlParameterItem/1.0",
                    "name": "TimeRange",
                    "type": 4,
                    "typeSettings": {
                      "selectableValues": [
                        {
                          "durationMs": 300000
                        },
                        {
                          "durationMs": 900000
                        },
                        {
                          "durationMs": 1800000
                        },
                        {
                          "durationMs": 3600000
                        },
                        {
                          "durationMs": 14400000
                        },
                        {
                          "durationMs": 43200000
                        },
                        {
                          "durationMs": 86400000
                        },
                        {
                          "durationMs": 172800000
                        },
                        {
                          "durationMs": 259200000
                        },
                        {
                          "durationMs": 604800000
                        },
                        {
                          "durationMs": 1209600000
                        },
                        {
                          "durationMs": 2419200000
                        },
                        {
                          "durationMs": 2592000000
                        },
                        {
                          "durationMs": 5184000000
                        },
                        {
                          "durationMs": 7776000000
                        }
                      ],
                      "allowCustom": true
                    },
                    "timeContext": {
                      "durationMs": 86400000
                    },
                    "value": {
                      "durationMs": 1209600000
                    },
                    "label": "Time Range"
                  },
                  {
                    "id": "379d941d-6191-494d-b518-caf9e0d8ce55",
                    "version": "KqlParameterItem/1.0",
                    "name": "DHCPServer",
                    "label": "DHCP Server",
                    "type": 2,
                    "multiSelect": true,
                    "quote": "'",
                    "delimiter": ",",
                    "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DHCP\"\r\n| parse-kv AdditionalExtensions as (InfobloxHostID: string) with (kv_delimiter=\"=\", pair_delimiter=\";\")\r\n| where isnotempty(InfobloxHostID)\r\n| distinct InfobloxHostID\r\n| sort by InfobloxHostID asc",
                    "typeSettings": {
                      "additionalResourceOptions": [
                        "value::all"
                      ],
                      "selectAllValue": "*",
                      "showDefault": false
                    },
                    "timeContext": {
                      "durationMs": 1209600000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "defaultValue": "value::all",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  {
                    "id": "68911f86-d896-407d-9a0b-07934f997037",
                    "version": "KqlParameterItem/1.0",
                    "name": "HostName",
                    "label": "Host Name",
                    "type": 2,
                    "multiSelect": true,
                    "quote": "'",
                    "delimiter": ",",
                    "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DHCP\" and isnotempty(SourceHostName)\r\n| distinct SourceHostName\r\n| sort by SourceHostName asc",
                    "typeSettings": {
                      "additionalResourceOptions": [
                        "value::all"
                      ],
                      "selectAllValue": "*",
                      "showDefault": false
                    },
                    "timeContext": {
                      "durationMs": 1209600000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "defaultValue": "value::all",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "value": [
                      "value::all"
                    ]
                  },
                  {
                    "id": "c5628a47-4153-4808-a618-9a06d560428b",
                    "version": "KqlParameterItem/1.0",
                    "name": "MAC",
                    "type": 2,
                    "multiSelect": true,
                    "quote": "'",
                    "delimiter": ",",
                    "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DHCP\" and isnotempty(SourceMACAddress)\r\n| distinct SourceMACAddress\r\n| sort by SourceMACAddress asc",
                    "typeSettings": {
                      "additionalResourceOptions": [
                        "value::all"
                      ],
                      "selectAllValue": "*",
                      "showDefault": false
                    },
                    "timeContext": {
                      "durationMs": 1209600000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "defaultValue": "value::all",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  {
                    "id": "053f6da7-3bb9-4f9f-9bc5-ec09a9723f52",
                    "version": "KqlParameterItem/1.0",
                    "name": "IP_Space",
                    "label": "IP Space",
                    "type": 2,
                    "multiSelect": true,
                    "quote": "'",
                    "delimiter": ",",
                    "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DHCP\"\r\n| parse-kv AdditionalExtensions as (InfobloxIPSpace: string) with ( kv_delimiter=\"=\", pair_delimiter=\";\")\r\n| distinct InfobloxIPSpace\r\n| order by InfobloxIPSpace asc",
                    "typeSettings": {
                      "additionalResourceOptions": [
                        "value::all"
                      ],
                      "selectAllValue": "*",
                      "showDefault": false
                    },
                    "timeContext": {
                      "durationMs": 1209600000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "defaultValue": "value::all",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "value": [
                      "value::all"
                    ]
                  }
                ],
                "style": "pills",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces"
              },
              "name": "parameters - 4"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DHCP\" and DeviceEventClassID == \"DHCP-LEASE-DELETE\"\r\n| parse-kv AdditionalExtensions as (InfobloxHostID: string, InfobloxLeaseOp: string, InfobloxIPSpace: string) with ( kv_delimiter=\"=\", pair_delimiter=\";\")\r\n| where ('{DHCPServer:escapejson}' == \"*\" or InfobloxHostID in~ ({DHCPServer})) and ('{MAC:escapejson}' == \"*\" or SourceMACAddress in~ ({MAC})) and ('{HostName:escapejson}' == \"*\" or SourceHostName in~ ({HostName})) and ('{IP_Space:escapejson}' == \"*\" or InfobloxIPSpace in~ ({IP_Space}))\r\n| summarize dcount(SourceIP)",
                "size": 3,
                "showAnalytics": true,
                "title": "Released DHCP Leases (Unique IPs)",
                "timeContextFromParameter": "TimeRange",
                "showRefreshButton": true,
                "showExportToExcel": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "tiles",
                "gridSettings": {
                  "rowLimit": 200,
                  "sortBy": [
                    {
                      "itemKey": "InfobloxThreatLevel",
                      "sortOrder": 1
                    }
                  ]
                },
                "sortBy": [
                  {
                    "itemKey": "InfobloxThreatLevel",
                    "sortOrder": 1
                  }
                ],
                "tileSettings": {
                  "titleContent": {
                    "formatter": 1
                  },
                  "leftContent": {
                    "columnMatch": "dcount_SourceIP",
                    "formatter": 12,
                    "formatOptions": {
                      "min": -1,
                      "palette": "green"
                    }
                  },
                  "showBorder": false
                }
              },
              "customWidth": "33",
              "name": "Released DHCP Leases (Unique IPs)",
              "styleSettings": {
                "showBorder": true
              }
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DHCP\" and DeviceEventClassID == \"DHCP-LEASE-DELETE\"\r\n| parse-kv AdditionalExtensions as (InfobloxHostID: string, InfobloxLeaseOp: string, InfobloxIPSpace: string) with ( kv_delimiter=\"=\", pair_delimiter=\";\")\r\n| where ('{DHCPServer:escapejson}' == \"*\" or InfobloxHostID in~ ({DHCPServer})) and ('{MAC:escapejson}' == \"*\" or SourceMACAddress in~ ({MAC})) and ('{HostName:escapejson}' == \"*\" or SourceHostName in~ ({HostName})) and ('{IP_Space:escapejson}' == \"*\" or InfobloxIPSpace in~ ({IP_Space}))\r\n| summarize count()",
                "size": 3,
                "showAnalytics": true,
                "title": "Released DHCP Leases",
                "timeContextFromParameter": "TimeRange",
                "showRefreshButton": true,
                "showExportToExcel": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "tiles",
                "gridSettings": {
                  "rowLimit": 200,
                  "sortBy": [
                    {
                      "itemKey": "InfobloxThreatLevel",
                      "sortOrder": 1
                    }
                  ]
                },
                "sortBy": [
                  {
                    "itemKey": "InfobloxThreatLevel",
                    "sortOrder": 1
                  }
                ],
                "tileSettings": {
                  "titleContent": {
                    "formatter": 1
                  },
                  "leftContent": {
                    "columnMatch": "count_",
                    "formatter": 12,
                    "formatOptions": {
                      "palette": "auto"
                    }
                  },
                  "showBorder": false
                }
              },
              "customWidth": "33",
              "name": "Released DHCP Leases",
              "styleSettings": {
                "showBorder": true
              }
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DHCP\" and DeviceEventClassID == \"DHCP-LEASE-UPDATE\"\r\n| parse-kv AdditionalExtensions as (InfobloxHostID: string, InfobloxLeaseOp: string, InfobloxIPSpace: string) with ( kv_delimiter=\"=\", pair_delimiter=\";\")\r\n| where ('{DHCPServer:escapejson}' == \"*\" or InfobloxHostID in~ ({DHCPServer})) and ('{MAC:escapejson}' == \"*\" or SourceMACAddress in~ ({MAC})) and ('{HostName:escapejson}' == \"*\" or SourceHostName in~ ({HostName})) and ('{IP_Space:escapejson}' == \"*\" or InfobloxIPSpace in~ ({IP_Space}))\r\n| summarize dcount(SourceIP)",
                "size": 3,
                "showAnalytics": true,
                "title": "Updated DHCP Leases (Unique IPs)",
                "timeContextFromParameter": "TimeRange",
                "showRefreshButton": true,
                "showExportToExcel": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "tiles",
                "gridSettings": {
                  "rowLimit": 200,
                  "sortBy": [
                    {
                      "itemKey": "InfobloxThreatLevel",
                      "sortOrder": 1
                    }
                  ]
                },
                "sortBy": [
                  {
                    "itemKey": "InfobloxThreatLevel",
                    "sortOrder": 1
                  }
                ],
                "tileSettings": {
                  "titleContent": {
                    "formatter": 1
                  },
                  "leftContent": {
                    "columnMatch": "dcount_SourceIP",
                    "formatter": 12,
                    "formatOptions": {
                      "min": -1,
                      "palette": "magenta"
                    }
                  },
                  "showBorder": false
                }
              },
              "customWidth": "33",
              "name": "Updated DHCP Leases (Unique IPs)",
              "styleSettings": {
                "showBorder": true
              }
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DHCP\" and DeviceEventClassID == \"DHCP-LEASE-UPDATE\"\r\n| parse-kv AdditionalExtensions as (InfobloxHostID: string, InfobloxLeaseOp: string, InfobloxIPSpace: string) with ( kv_delimiter=\"=\", pair_delimiter=\";\")\r\n| where ('{DHCPServer:escapejson}' == \"*\" or InfobloxHostID in~ ({DHCPServer})) and ('{MAC:escapejson}' == \"*\" or SourceMACAddress in~ ({MAC})) and ('{HostName:escapejson}' == \"*\" or SourceHostName in~ ({HostName})) and ('{IP_Space:escapejson}' == \"*\" or InfobloxIPSpace in~ ({IP_Space}))\r\n| summarize count()",
                "size": 3,
                "showAnalytics": true,
                "title": "Updated DHCP Leases ",
                "timeContextFromParameter": "TimeRange",
                "showRefreshButton": true,
                "showExportToExcel": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "tiles",
                "gridSettings": {
                  "rowLimit": 200,
                  "sortBy": [
                    {
                      "itemKey": "InfobloxThreatLevel",
                      "sortOrder": 1
                    }
                  ]
                },
                "sortBy": [
                  {
                    "itemKey": "InfobloxThreatLevel",
                    "sortOrder": 1
                  }
                ],
                "tileSettings": {
                  "titleContent": {
                    "formatter": 1
                  },
                  "leftContent": {
                    "columnMatch": "count_",
                    "formatter": 12,
                    "formatOptions": {
                      "min": -1,
                      "palette": "greenDark"
                    }
                  },
                  "showBorder": false
                }
              },
              "customWidth": "33",
              "name": "Updated DHCP Leases ",
              "styleSettings": {
                "showBorder": true
              }
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DHCP\" and DeviceEventClassID == \"DHCP-LEASE-CREATE\"\r\n| parse-kv AdditionalExtensions as (InfobloxHostID: string, InfobloxLeaseOp: string, InfobloxIPSpace: string) with ( kv_delimiter=\"=\", pair_delimiter=\";\")\r\n| where ('{DHCPServer:escapejson}' == \"*\" or InfobloxHostID in~ ({DHCPServer})) and ('{MAC:escapejson}' == \"*\" or SourceMACAddress in~ ({MAC})) and ('{HostName:escapejson}' == \"*\" or SourceHostName in~ ({HostName})) and ('{IP_Space:escapejson}' == \"*\" or InfobloxIPSpace in~ ({IP_Space}))\r\n| summarize dcount(SourceIP)",
                "size": 3,
                "showAnalytics": true,
                "title": "New DHCP Leases (Unique IPs)",
                "color": "orange",
                "timeContextFromParameter": "TimeRange",
                "showRefreshButton": true,
                "showExportToExcel": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "tiles",
                "tileSettings": {
                  "titleContent": {
                    "formatter": 1
                  },
                  "leftContent": {
                    "columnMatch": "dcount_SourceIP",
                    "formatter": 12,
                    "formatOptions": {
                      "min": -1,
                      "palette": "pink"
                    }
                  },
                  "showBorder": false,
                  "size": "full"
                }
              },
              "customWidth": "33",
              "name": "New DHCP Leases (Unique IPs)",
              "styleSettings": {
                "padding": "8px",
                "showBorder": true
              }
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DHCP\" and DeviceEventClassID == \"DHCP-LEASE-CREATE\"\r\n| parse-kv AdditionalExtensions as (InfobloxHostID: string, InfobloxLeaseOp: string, InfobloxIPSpace: string) with ( kv_delimiter=\"=\", pair_delimiter=\";\")\r\n| where ('{DHCPServer:escapejson}' == \"*\" or InfobloxHostID in~ ({DHCPServer})) and ('{MAC:escapejson}' == \"*\" or SourceMACAddress in~ ({MAC})) and ('{HostName:escapejson}' == \"*\" or SourceHostName in~ ({HostName})) and ('{IP_Space:escapejson}' == \"*\" or InfobloxIPSpace in~ ({IP_Space}))\r\n| summarize count()",
                "size": 3,
                "showAnalytics": true,
                "title": "New DHCP Leases",
                "timeContextFromParameter": "TimeRange",
                "showRefreshButton": true,
                "showExportToExcel": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "tiles",
                "gridSettings": {
                  "rowLimit": 200,
                  "sortBy": [
                    {
                      "itemKey": "InfobloxThreatLevel",
                      "sortOrder": 1
                    }
                  ]
                },
                "sortBy": [
                  {
                    "itemKey": "InfobloxThreatLevel",
                    "sortOrder": 1
                  }
                ],
                "tileSettings": {
                  "titleContent": {
                    "formatter": 1
                  },
                  "leftContent": {
                    "columnMatch": "count_",
                    "formatter": 12,
                    "formatOptions": {
                      "palette": "orangeBlue"
                    }
                  },
                  "showBorder": false
                }
              },
              "customWidth": "33",
              "name": "New DHCP Leases",
              "styleSettings": {
                "showBorder": true
              }
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DHCP\"\r\n| parse-kv AdditionalExtensions as (InfobloxHostID: string, InfobloxLeaseOp: string, InfobloxIPSpace: string) with ( kv_delimiter=\"=\", pair_delimiter=\";\")\r\n| where ('{DHCPServer:escapejson}' == \"*\" or InfobloxHostID in~ ({DHCPServer})) and ('{MAC:escapejson}' == \"*\" or SourceMACAddress in~ ({MAC})) and ('{HostName:escapejson}' == \"*\" or SourceHostName in~ ({HostName})) and ('{IP_Space:escapejson}' == \"*\" or InfobloxIPSpace in~ ({IP_Space}))\r\n| make-series Hits = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by InfobloxLeaseOp",
                "size": 0,
                "showAnalytics": true,
                "title": "DHCP Leases over Time",
                "timeContextFromParameter": "TimeRange",
                "showRefreshButton": true,
                "showExportToExcel": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "linechart",
                "chartSettings": {
                  "showLegend": true
                }
              },
              "name": "query - 7",
              "styleSettings": {
                "showBorder": true
              }
            },
            {
              "type": 12,
              "content": {
                "version": "NotebookGroup/1.0",
                "groupType": "editable",
                "items": [
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DHCP\"\r\n| parse-kv AdditionalExtensions as (InfobloxHostID: string, InfobloxLeaseOp: string, InfobloxIPSpace: string) with ( kv_delimiter=\"=\", pair_delimiter=\";\")\r\n| where ('{DHCPServer:escapejson}' == \"*\" or InfobloxHostID in~ ({DHCPServer})) and ('{MAC:escapejson}' == \"*\" or SourceMACAddress in~ ({MAC})) and ('{HostName:escapejson}' == \"*\" or SourceHostName in~ ({HostName})) and ('{IP_Space:escapejson}' == \"*\" or InfobloxIPSpace in~ ({IP_Space}))\r\n| summarize count() by InfobloxLeaseOp",
                      "size": 3,
                      "showAnalytics": true,
                      "title": "DHCP Activity Summary",
                      "timeContextFromParameter": "TimeRange",
                      "showRefreshButton": true,
                      "exportFieldName": "series",
                      "exportParameterName": "Lease",
                      "showExportToExcel": true,
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "piechart",
                      "chartSettings": {
                        "showMetrics": false,
                        "showLegend": true
                      }
                    },
                    "customWidth": "100",
                    "name": "query - 2",
                    "styleSettings": {
                      "margin": "5px",
                      "padding": "51px",
                      "showBorder": true
                    }
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "💡 _Click on a 'DHCP Activity Summary' pie chart to see more Details."
                    },
                    "conditionalVisibility": {
                      "parameterName": "Lease",
                      "comparison": "isEqualTo"
                    },
                    "name": "text - 1"
                  }
                ],
                "exportParameters": true
              },
              "customWidth": "50",
              "name": "group - 6"
            },
            {
              "type": 12,
              "content": {
                "version": "NotebookGroup/1.0",
                "groupType": "editable",
                "items": [
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DHCP\"\r\n| parse-kv AdditionalExtensions as (InfobloxHostID: string, InfobloxLeaseOp: string, InfobloxIPSpace: string) with ( kv_delimiter=\"=\", pair_delimiter=\";\")\r\n| where ('{DHCPServer:escapejson}' == \"*\" or InfobloxHostID in~ ({DHCPServer})) and ('{MAC:escapejson}' == \"*\" or SourceMACAddress in~ ({MAC})) and ('{HostName:escapejson}' == \"*\" or SourceHostName in~ ({HostName})) and ('{IP_Space:escapejson}' == \"*\" or InfobloxIPSpace in~ ({IP_Space}))\r\n| project-rename ['MAC Address'] = SourceMACAddress\r\n| summarize Count = count() by ['MAC Address']\r\n| top 10 by Count desc",
                      "size": 3,
                      "showAnalytics": true,
                      "title": "Top 10 MAC Address",
                      "timeContextFromParameter": "TimeRange",
                      "showRefreshButton": true,
                      "exportFieldName": "series",
                      "exportParameterName": "Pie_MAC",
                      "showExportToExcel": true,
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "piechart",
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "Count",
                            "formatter": 4,
                            "formatOptions": {
                              "palette": "blue"
                            }
                          }
                        ]
                      },
                      "chartSettings": {
                        "createOtherGroup": 10,
                        "showMetrics": false,
                        "showLegend": true
                      }
                    },
                    "customWidth": "100",
                    "name": "query - 6",
                    "styleSettings": {
                      "padding": "53px",
                      "showBorder": true
                    }
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "💡 _Click on a 'Top 10 MAC Address' pie chart to see SourceIP Details."
                    },
                    "conditionalVisibility": {
                      "parameterName": "Pie_MAC",
                      "comparison": "isEqualTo"
                    },
                    "name": "text - 1"
                  }
                ],
                "exportParameters": true
              },
              "customWidth": "50",
              "name": "group - 15"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DHCP\"\r\n| parse-kv AdditionalExtensions as (InfobloxHostID: string, InfobloxIPSpace: string, InfobloxSubnet: string, InfobloxRangeStart: string, InfobloxRangeEnd: string, InfobloxLeaseOp: string, InfobloxClientID: string, InfobloxDUID: string, InfobloxLifetime: string, InfobloxLeaseUUID: string, InfobloxFingerprintPr: string, InfobloxFingerprint: string ) with ( kv_delimiter=\"=\", pair_delimiter=\";\")\r\n| where ('{DHCPServer:escapejson}' == \"*\" or InfobloxHostID in~ ({DHCPServer})) and ('{MAC:escapejson}' == \"*\" or SourceMACAddress in~ ({MAC})) and ('{HostName:escapejson}' == \"*\" or SourceHostName in~ ({HostName})) and InfobloxLeaseOp == ('{Lease}') and ('{IP_Space:escapejson}' == \"*\" or InfobloxIPSpace in~ ({IP_Space}))\r\n| join kind=inner(IPAM_IP_Space_Info_CL) on $left.InfobloxIPSpace == $right.id_s \r\n| project-rename ['DHCP Server'] = InfobloxHostID, ['Host Name'] = SourceHostName, ['MAC Address'] = SourceMACAddress, InfobloxIPspace = name_s\r\n| project TimeGenerated, ['DHCP Server'], ['Host Name'], ['MAC Address'], SourceIP, LogSeverity, Activity, InfobloxIPspace, Computer, CollectorHostName, ApplicationProtocol, InfobloxSubnet, InfobloxRangeStart, InfobloxRangeEnd, InfobloxLeaseOp, InfobloxClientID, InfobloxLifetime, InfobloxLeaseUUID, InfobloxFingerprintPr, InfobloxFingerprint",
                "size": 0,
                "showAnalytics": true,
                "title": "DHCP Lease for Activity : {Lease}",
                "timeContextFromParameter": "TimeRange",
                "showRefreshButton": true,
                "showExportToExcel": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "table",
                "gridSettings": {
                  "formatters": [
                    {
                      "columnMatch": "Count",
                      "formatter": 4,
                      "formatOptions": {
                        "palette": "blue"
                      }
                    }
                  ],
                  "rowLimit": 10000,
                  "filter": true
                }
              },
              "customWidth": "100",
              "conditionalVisibility": {
                "parameterName": "Lease",
                "comparison": "isNotEqualTo"
              },
              "name": "query - 5",
              "styleSettings": {
                "showBorder": true
              }
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DHCP\" and SourceMACAddress == ('{Pie_MAC}')\r\n| parse-kv AdditionalExtensions as (InfobloxHostID: string, InfobloxLeaseOp: string, InfobloxIPSpace: string) with ( kv_delimiter=\"=\", pair_delimiter=\";\")\r\n| where ('{DHCPServer:escapejson}' == \"*\" or InfobloxHostID in~ ({DHCPServer})) and ('{HostName:escapejson}' == \"*\" or SourceHostName in~ ({HostName})) and ('{IP_Space:escapejson}' == \"*\" or InfobloxIPSpace in~ ({IP_Space}))\r\n| make-series Hits = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by SourceIP\r\n",
                "size": 0,
                "showAnalytics": true,
                "title": "Source IPs for MAC : {Pie_MAC}",
                "timeContextFromParameter": "TimeRange",
                "showRefreshButton": true,
                "showExportToExcel": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "barchart",
                "chartSettings": {
                  "showLegend": true
                }
              },
              "conditionalVisibility": {
                "parameterName": "Pie_MAC",
                "comparison": "isNotEqualTo"
              },
              "name": "query - 14",
              "styleSettings": {
                "showBorder": true
              }
            },
            {
              "type": 12,
              "content": {
                "version": "NotebookGroup/1.0",
                "groupType": "editable",
                "items": [
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DHCP\"\r\n| parse-kv AdditionalExtensions as (InfobloxHostID: string, InfobloxIPSpace: string) with (kv_delimiter=\"=\", pair_delimiter=\";\")\r\n| where ('{DHCPServer:escapejson}' == \"*\" or InfobloxHostID in~ ({DHCPServer})) and ('{MAC:escapejson}' == \"*\" or SourceMACAddress in~ ({MAC})) and ('{HostName:escapejson}' == \"*\" or SourceHostName in~ ({HostName})) and ('{IP_Space:escapejson}' == \"*\" or InfobloxIPSpace in~ ({IP_Space}))\r\n| summarize Count=count() by SourceIP\r\n| top 10 by Count",
                      "size": 0,
                      "showAnalytics": true,
                      "title": "Top 10 IP Addresses",
                      "timeContextFromParameter": "TimeRange",
                      "showRefreshButton": true,
                      "exportFieldName": "SourceIP",
                      "exportParameterName": "SourceIP",
                      "showExportToExcel": true,
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "Count",
                            "formatter": 4,
                            "formatOptions": {
                              "palette": "blue"
                            }
                          }
                        ]
                      }
                    },
                    "name": "query - 3",
                    "styleSettings": {
                      "margin": "5px",
                      "showBorder": true
                    }
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "💡 _Click on a 'Top 10 IP Addresses' grid to see Host Details."
                    },
                    "name": "text - 1"
                  }
                ],
                "exportParameters": true
              },
              "customWidth": "50",
              "name": "group - 6"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DHCP\"\r\n| parse-kv AdditionalExtensions as (InfobloxHostID: string, InfobloxIPSpace: string) with ( kv_delimiter=\"=\", pair_delimiter=\";\")\r\n| where ('{DHCPServer:escapejson}' == \"*\" or InfobloxHostID in~ ({DHCPServer})) and ('{MAC:escapejson}' == \"*\" or SourceMACAddress in~ ({MAC})) and ('{HostName:escapejson}' == \"*\" or SourceHostName in~ ({HostName})) and SourceIP == ('{SourceIP}') and ('{IP_Space:escapejson}' == \"*\" or InfobloxIPSpace in~ ({IP_Space}))\r\n| project-rename ['Host Name'] = SourceHostName\r\n| summarize Count = count() by ['Host Name']",
                "size": 3,
                "showAnalytics": true,
                "title": "Host for IP : {SourceIP}",
                "timeContextFromParameter": "TimeRange",
                "showRefreshButton": true,
                "showExportToExcel": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "piechart",
                "chartSettings": {
                  "createOtherGroup": 10,
                  "showMetrics": false,
                  "showLegend": true
                }
              },
              "customWidth": "50",
              "conditionalVisibility": {
                "parameterName": "SourceIP",
                "comparison": "isNotEqualTo"
              },
              "name": "query - 6",
              "styleSettings": {
                "padding": "52px",
                "showBorder": true
              }
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DHCP\"\r\n| parse-kv AdditionalExtensions as (InfobloxHostID: string, InfobloxIPSpace: string, InfobloxSubnet: string, InfobloxRangeStart: string, InfobloxRangeEnd: string, InfobloxLeaseOp: string, InfobloxClientID: string, InfobloxDUID: string, InfobloxLifetime: string, InfobloxLeaseUUID: string, InfobloxFingerprintPr: string, InfobloxFingerprint: string ) with ( kv_delimiter=\"=\", pair_delimiter=\";\")\r\n| where ('{DHCPServer:escapejson}' == \"*\" or InfobloxHostID in~ ({DHCPServer})) and ('{MAC:escapejson}' == \"*\" or SourceMACAddress in~ ({MAC})) and ('{HostName:escapejson}' == \"*\" or SourceHostName in~ ({HostName})) and ('{IP_Space:escapejson}' == \"*\" or InfobloxIPSpace in~ ({IP_Space}))\r\n| join kind=inner(IPAM_IP_Space_Info_CL) on $left.InfobloxIPSpace == $right.id_s \r\n| project-rename ['DHCP Server'] = InfobloxHostID, ['Host Name'] = SourceHostName, ['MAC Address'] = SourceMACAddress, InfobloxIPspace = name_s\r\n| project TimeGenerated, ['DHCP Server'], ['Host Name'], ['MAC Address'], SourceIP, LogSeverity, Activity, InfobloxIPspace, Computer, CollectorHostName, ApplicationProtocol, InfobloxSubnet, InfobloxRangeStart, InfobloxRangeEnd, InfobloxLeaseOp, InfobloxClientID, InfobloxLifetime, InfobloxLeaseUUID, InfobloxFingerprintPr, InfobloxFingerprint",
                "size": 0,
                "showAnalytics": true,
                "title": "DHCP Lease",
                "timeContextFromParameter": "TimeRange",
                "showRefreshButton": true,
                "showExportToExcel": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "gridSettings": {
                  "formatters": [
                    {
                      "columnMatch": "LogSeverity",
                      "formatter": 4,
                      "formatOptions": {
                        "palette": "yellowOrangeRed"
                      }
                    }
                  ],
                  "rowLimit": 10000,
                  "filter": true
                }
              },
              "name": "query - 0",
              "styleSettings": {
                "margin": "5",
                "padding": "5",
                "showBorder": true
              }
            }
          ]
        },
        "conditionalVisibility": {
          "parameterName": "Parameter",
          "comparison": "isEqualTo",
          "value": "2"
        },
        "name": "group - 5",
        "styleSettings": {
          "margin": "5px"
        }
      },
      {
        "type": 12,
        "content": {
          "version": "NotebookGroup/1.0",
          "groupType": "editable",
          "items": [
            {
              "type": 9,
              "content": {
                "version": "KqlParameterItem/1.0",
                "parameters": [
                  {
                    "id": "82320096-33a6-4d48-b64f-2c90aa564ed4",
                    "version": "KqlParameterItem/1.0",
                    "name": "TimeRange",
                    "type": 4,
                    "typeSettings": {
                      "selectableValues": [
                        {
                          "durationMs": 300000
                        },
                        {
                          "durationMs": 900000
                        },
                        {
                          "durationMs": 1800000
                        },
                        {
                          "durationMs": 3600000
                        },
                        {
                          "durationMs": 14400000
                        },
                        {
                          "durationMs": 43200000
                        },
                        {
                          "durationMs": 86400000
                        },
                        {
                          "durationMs": 172800000
                        },
                        {
                          "durationMs": 259200000
                        },
                        {
                          "durationMs": 604800000
                        },
                        {
                          "durationMs": 1209600000
                        },
                        {
                          "durationMs": 2419200000
                        },
                        {
                          "durationMs": 2592000000
                        },
                        {
                          "durationMs": 5184000000
                        },
                        {
                          "durationMs": 7776000000
                        }
                      ],
                      "allowCustom": true
                    },
                    "timeContext": {
                      "durationMs": 86400000
                    },
                    "value": {
                      "durationMs": 1209600000
                    },
                    "label": "Time Range"
                  },
                  {
                    "id": "00756d7d-b074-42e5-996e-4ffa6487606f",
                    "version": "KqlParameterItem/1.0",
                    "name": "UserName",
                    "label": "User",
                    "type": 2,
                    "multiSelect": true,
                    "quote": "'",
                    "delimiter": ",",
                    "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"Audit\" and isnotempty(SourceUserName)\r\n| distinct SourceUserName\r\n| sort by SourceUserName asc\r\n",
                    "typeSettings": {
                      "additionalResourceOptions": [
                        "value::all"
                      ],
                      "selectAllValue": "*",
                      "showDefault": false
                    },
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "defaultValue": "value::all",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  {
                    "id": "3d2f3549-f5c5-4496-a013-f9b306321c75",
                    "version": "KqlParameterItem/1.0",
                    "name": "Action",
                    "type": 2,
                    "multiSelect": true,
                    "quote": "'",
                    "delimiter": ",",
                    "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"Audit\" and isnotempty(DeviceAction)\r\n| distinct DeviceAction\r\n| sort by DeviceAction asc",
                    "typeSettings": {
                      "additionalResourceOptions": [
                        "value::all"
                      ],
                      "selectAllValue": "*",
                      "showDefault": false
                    },
                    "timeContext": {
                      "durationMs": 1209600000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "defaultValue": "value::all",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  }
                ],
                "style": "pills",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces"
              },
              "name": "parameters - 1"
            },
            {
              "type": 12,
              "content": {
                "version": "NotebookGroup/1.0",
                "groupType": "editable",
                "items": [
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"Audit\"\r\n| parse-kv AdditionalExtensions as (InfobloxHostID: string, InfobloxIPSpace: string, InfobloxSubnet: string, InfobloxRangeStart: string, InfobloxRangeEnd: string, InfobloxLeaseOp: string, InfobloxClientID: string, InfobloxDUID: string, InfobloxLifetime: string, InfobloxLeaseUUID: string, InfobloxFingerprintPr: string, InfobloxFingerprint: string ) with ( kv_delimiter=\"=\", pair_delimiter=\";\")\r\n| where ('{UserName:escapejson}' == \"*\" or SourceUserName in~ ({UserName})) and ('{Action:escapejson}' == \"*\" or DeviceAction in~ ({Action}))\r\n| project-rename Action = DeviceAction\r\n| summarize Count = count() by Action\r\n",
                      "size": 0,
                      "showAnalytics": true,
                      "title": "Types of Actions",
                      "timeContextFromParameter": "TimeRange",
                      "showRefreshButton": true,
                      "exportFieldName": "series",
                      "exportParameterName": "bar_Action",
                      "showExportToExcel": true,
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "barchart",
                      "tileSettings": {
                        "showBorder": false,
                        "titleContent": {
                          "columnMatch": "Action",
                          "formatter": 1
                        },
                        "leftContent": {
                          "columnMatch": "Count",
                          "formatter": 12,
                          "formatOptions": {
                            "palette": "auto"
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          }
                        }
                      },
                      "graphSettings": {
                        "type": 0,
                        "topContent": {
                          "columnMatch": "Action",
                          "formatter": 1
                        },
                        "centerContent": {
                          "columnMatch": "Count",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "maximumSignificantDigits": 3,
                              "maximumFractionDigits": 2
                            }
                          }
                        }
                      }
                    },
                    "name": "query - 2",
                    "styleSettings": {
                      "showBorder": true
                    }
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "💡 _Click on a 'Types of Actions' Bar to see 'Top 10 User for Action' and 'Audit Logs for Action'."
                    },
                    "conditionalVisibility": {
                      "parameterName": "bar_Action",
                      "comparison": "isEqualTo"
                    },
                    "name": "text - 4"
                  }
                ],
                "exportParameters": true
              },
              "name": "group - 5"
            },
            {
              "type": 12,
              "content": {
                "version": "NotebookGroup/1.0",
                "groupType": "editable",
                "items": [
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"Audit\" and DeviceAction == ('{bar_Action}')\r\n| parse-kv AdditionalExtensions as (InfobloxHostID: string, InfobloxIPSpace: string, InfobloxSubnet: string, InfobloxHTTPReqBody: string, InfobloxResourceId: string, InfobloxResourceType: string, InfobloxHTTPRespBody: string, id: string, name: string, pool_id: string, service_type: string, InfobloxSubjectGroups: string, InfobloxRangeStart: string, InfobloxRangeEnd: string, InfobloxLeaseOp: string, InfobloxClientID: string, InfobloxDUID: string, InfobloxLifetime: string, InfobloxLeaseUUID: string, InfobloxFingerprintPr: string, InfobloxFingerprint: string ) with ( kv_delimiter=\"=\", pair_delimiter=\";\")\r\n| where ('{UserName:escapejson}' == \"*\" or SourceUserName in~ ({UserName})) \r\n| project-rename User = SourceUserName, Action = DeviceAction\r\n| summarize Count = count() by User\r\n| top 10 by Count desc",
                      "size": 3,
                      "showAnalytics": true,
                      "title": "Top 10 User for Action : {bar_Action}",
                      "timeContextFromParameter": "TimeRange",
                      "showRefreshButton": true,
                      "exportFieldName": "series",
                      "exportParameterName": "Pie_user",
                      "showExportToExcel": true,
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "piechart",
                      "chartSettings": {
                        "createOtherGroup": 10,
                        "showMetrics": false,
                        "showLegend": true
                      }
                    },
                    "customWidth": "100",
                    "conditionalVisibility": {
                      "parameterName": "bar_Action",
                      "comparison": "isNotEqualTo"
                    },
                    "name": "query - 4",
                    "styleSettings": {
                      "margin": "5px",
                      "padding": "70px",
                      "maxWidth": "50",
                      "showBorder": true
                    }
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "💡 _Click on a 'Top 10 User for Action : {bar_Action}' pie chart to see 'Top 10 SourceIP' for that specific user."
                    },
                    "conditionalVisibility": {
                      "parameterName": "Pie_user",
                      "comparison": "isEqualTo"
                    },
                    "name": "text - 1"
                  }
                ],
                "exportParameters": true
              },
              "customWidth": "50",
              "conditionalVisibility": {
                "parameterName": "bar_Action",
                "comparison": "isNotEqualTo"
              },
              "name": "group - 6"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"Audit\" and DeviceAction == ('{bar_Action}')\r\n| parse-kv AdditionalExtensions as (InfobloxHostID: string, InfobloxIPSpace: string, InfobloxSubnet: string, InfobloxHTTPReqBody: string, InfobloxResourceId: string, InfobloxResourceType: string, InfobloxHTTPRespBody: string, id: string, name: string, pool_id: string, service_type: string, InfobloxSubjectGroups: string, InfobloxRangeStart: string, InfobloxRangeEnd: string, InfobloxLeaseOp: string, InfobloxClientID: string, InfobloxDUID: string, InfobloxLifetime: string, InfobloxLeaseUUID: string, InfobloxFingerprintPr: string, InfobloxFingerprint: string ) with ( kv_delimiter=\"=\", pair_delimiter=\";\")\r\n| where ('{UserName:escapejson}' == \"*\" or SourceUserName in~ ({UserName})) \r\n| project-rename User = SourceUserName, Action = DeviceAction\r\n| project TimeGenerated, User, Action, SourceIP, LogSeverity, Computer, Message, Activity, InfobloxHostID, InfobloxIPSpace, InfobloxSubnet, InfobloxHTTPReqBody, InfobloxResourceId, InfobloxResourceType, InfobloxHTTPRespBody, id, name, pool_id, service_type, InfobloxSubjectGroups, InfobloxRangeStart, InfobloxRangeEnd, InfobloxLeaseOp, InfobloxClientID, InfobloxDUID, InfobloxLifetime, InfobloxLeaseUUID, InfobloxFingerprintPr, InfobloxFingerprint, ApplicationProtocol, CollectorHostName",
                "size": 0,
                "showAnalytics": true,
                "title": "Audit Logs for Action : {bar_Action}",
                "timeContextFromParameter": "TimeRange",
                "showRefreshButton": true,
                "showExportToExcel": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "table",
                "gridSettings": {
                  "rowLimit": 10000,
                  "filter": true
                }
              },
              "customWidth": "50",
              "conditionalVisibility": {
                "parameterName": "bar_Action",
                "comparison": "isNotEqualTo"
              },
              "name": "query - 3",
              "styleSettings": {
                "margin": "5px",
                "maxWidth": "50",
                "showBorder": true
              }
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"Audit\" and DeviceAction == ('{bar_Action}')\r\n| parse-kv AdditionalExtensions as (InfobloxHostID: string, InfobloxIPSpace: string, InfobloxSubnet: string, InfobloxHTTPReqBody: string, InfobloxResourceId: string, InfobloxResourceType: string, InfobloxHTTPRespBody: string, id: string, name: string, pool_id: string, service_type: string, InfobloxSubjectGroups: string, InfobloxRangeStart: string, InfobloxRangeEnd: string, InfobloxLeaseOp: string, InfobloxClientID: string, InfobloxDUID: string, InfobloxLifetime: string, InfobloxLeaseUUID: string, InfobloxFingerprintPr: string, InfobloxFingerprint: string ) with ( kv_delimiter=\"=\", pair_delimiter=\";\")\r\n| where ('{UserName:escapejson}' == \"*\" or SourceUserName in~ ({UserName})) and SourceUserName == ('{Pie_user}')\r\n| summarize Count = count() by SourceIP\r\n| top 10 by Count desc",
                "size": 3,
                "showAnalytics": true,
                "title": "Top 10 SourceIP for User : {Pie_user}",
                "timeContextFromParameter": "TimeRange",
                "showRefreshButton": true,
                "showExportToExcel": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "piechart",
                "chartSettings": {
                  "createOtherGroup": 10,
                  "showMetrics": false,
                  "showLegend": true
                }
              },
              "customWidth": "50",
              "conditionalVisibility": {
                "parameterName": "Pie_user",
                "comparison": "isNotEqualTo"
              },
              "name": "query - 5",
              "styleSettings": {
                "padding": "49px",
                "showBorder": true
              }
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"Audit\"\r\n| parse-kv AdditionalExtensions as (InfobloxHostID: string, InfobloxIPSpace: string, InfobloxSubnet: string, InfobloxHTTPReqBody: string, InfobloxResourceId: string, InfobloxResourceType: string, InfobloxHTTPRespBody: string, id: string, name: string, pool_id: string, service_type: string, InfobloxSubjectGroups: string, InfobloxRangeStart: string, InfobloxRangeEnd: string, InfobloxLeaseOp: string, InfobloxClientID: string, InfobloxDUID: string, InfobloxLifetime: string, InfobloxLeaseUUID: string, InfobloxFingerprintPr: string, InfobloxFingerprint: string ) with ( kv_delimiter=\"=\", pair_delimiter=\";\")\r\n| where ('{UserName:escapejson}' == \"*\" or SourceUserName in~ ({UserName})) and ('{Action:escapejson}' == \"*\" or DeviceAction in~ ({Action}))\r\n| project-rename User = SourceUserName, Action = DeviceAction\r\n| project TimeGenerated, Action, Activity, User, SourceIP, LogSeverity, Computer, Message, InfobloxHostID, InfobloxIPSpace, InfobloxSubnet, InfobloxHTTPReqBody, InfobloxResourceId, InfobloxResourceType, InfobloxHTTPRespBody, id, name, pool_id, service_type, InfobloxSubjectGroups, InfobloxRangeStart, InfobloxRangeEnd, InfobloxLeaseOp, InfobloxClientID, InfobloxDUID, InfobloxLifetime, InfobloxLeaseUUID, InfobloxFingerprintPr, InfobloxFingerprint, ApplicationProtocol, CollectorHostName",
                "size": 0,
                "showAnalytics": true,
                "title": "Audit Logs",
                "timeContextFromParameter": "TimeRange",
                "showRefreshButton": true,
                "showExportToExcel": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "gridSettings": {
                  "formatters": [
                    {
                      "columnMatch": "LogSeverity",
                      "formatter": 4,
                      "formatOptions": {
                        "palette": "yellowOrangeRed"
                      }
                    }
                  ],
                  "rowLimit": 10000,
                  "filter": true
                },
                "sortBy": []
              },
              "name": "query - 4",
              "styleSettings": {
                "showBorder": true
              }
            }
          ]
        },
        "conditionalVisibility": {
          "parameterName": "Parameter",
          "comparison": "isEqualTo",
          "value": "3"
        },
        "name": "group - 3"
      },
      {
        "type": 12,
        "content": {
          "version": "NotebookGroup/1.0",
          "groupType": "editable",
          "items": [
            {
              "type": 9,
              "content": {
                "version": "KqlParameterItem/1.0",
                "parameters": [
                  {
                    "id": "daee0513-3b57-4c4d-9052-7a92094a4036",
                    "version": "KqlParameterItem/1.0",
                    "name": "TimeRange",
                    "type": 4,
                    "typeSettings": {
                      "selectableValues": [
                        {
                          "durationMs": 300000
                        },
                        {
                          "durationMs": 900000
                        },
                        {
                          "durationMs": 1800000
                        },
                        {
                          "durationMs": 3600000
                        },
                        {
                          "durationMs": 14400000
                        },
                        {
                          "durationMs": 43200000
                        },
                        {
                          "durationMs": 86400000
                        },
                        {
                          "durationMs": 172800000
                        },
                        {
                          "durationMs": 259200000
                        },
                        {
                          "durationMs": 604800000
                        },
                        {
                          "durationMs": 1209600000
                        },
                        {
                          "durationMs": 2419200000
                        },
                        {
                          "durationMs": 2592000000
                        },
                        {
                          "durationMs": 5184000000
                        },
                        {
                          "durationMs": 7776000000
                        }
                      ],
                      "allowCustom": true
                    },
                    "timeContext": {
                      "durationMs": 86400000
                    },
                    "value": {
                      "durationMs": 1209600000
                    },
                    "label": "Time Range"
                  },
                  {
                    "id": "9f36e52f-3282-4976-9187-7b3f551d91e9",
                    "version": "KqlParameterItem/1.0",
                    "name": "User",
                    "type": 2,
                    "multiSelect": true,
                    "quote": "'",
                    "delimiter": ",",
                    "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\"\r\nand DeviceEventClassID has_cs \"RPZ\"\r\nand isnotempty(SourceUserName)\r\n| summarize arg_max(TimeGenerated,*) by SourceUserName\r\n| project SourceUserName\r\n| sort by SourceUserName asc",
                    "typeSettings": {
                      "additionalResourceOptions": [
                        "value::all"
                      ],
                      "selectAllValue": "*",
                      "showDefault": false
                    },
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "defaultValue": "value::all",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "value": [
                      "value::all"
                    ]
                  },
                  {
                    "id": "8b364f17-07f7-4403-8086-26bf36c92536",
                    "version": "KqlParameterItem/1.0",
                    "name": "Asset",
                    "type": 2,
                    "multiSelect": true,
                    "quote": "'",
                    "delimiter": ",",
                    "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"RPZ\" and isnotempty(DeviceName)\r\n| distinct DeviceName\r\n| sort by DeviceName desc",
                    "typeSettings": {
                      "additionalResourceOptions": [
                        "value::all"
                      ],
                      "selectAllValue": "*",
                      "showDefault": false
                    },
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "defaultValue": "value::all",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "value": [
                      "value::all"
                    ]
                  },
                  {
                    "id": "cf61f3a4-fe90-4244-b94b-4aedc1210af9",
                    "version": "KqlParameterItem/1.0",
                    "name": "Location",
                    "type": 2,
                    "multiSelect": true,
                    "quote": "'",
                    "delimiter": ",",
                    "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"RPZ\"\r\n| parse-kv AdditionalExtensions as (InfobloxB1Region:string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where isnotempty(InfobloxB1Region) \r\n| distinct Location = InfobloxB1Region\r\n| sort by Location asc",
                    "typeSettings": {
                      "additionalResourceOptions": [
                        "value::all"
                      ],
                      "selectAllValue": "*",
                      "showDefault": false
                    },
                    "timeContext": {
                      "durationMs": 1209600000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "defaultValue": "value::all",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "value": [
                      "value::all"
                    ]
                  },
                  {
                    "id": "a8abd3c3-f310-4f71-8f8f-10729220dfc9",
                    "version": "KqlParameterItem/1.0",
                    "name": "FQDN",
                    "type": 2,
                    "multiSelect": true,
                    "quote": "'",
                    "delimiter": ",",
                    "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\"\r\nand DeviceEventClassID has_cs \"RPZ\" and isnotempty(DestinationDnsDomain)\r\n| distinct DestinationDnsDomain\r\n| sort by DestinationDnsDomain asc",
                    "typeSettings": {
                      "additionalResourceOptions": [
                        "value::all"
                      ],
                      "selectAllValue": "*",
                      "showDefault": false
                    },
                    "timeContext": {
                      "durationMs": 1209600000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "defaultValue": "value::all",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "value": [
                      "value::all"
                    ]
                  },
                  {
                    "id": "e63dae9c-b8cf-4c02-9a7f-de990bfc4d1b",
                    "version": "KqlParameterItem/1.0",
                    "name": "SLD",
                    "type": 2,
                    "multiSelect": true,
                    "quote": "'",
                    "delimiter": ",",
                    "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\"\r\nand DeviceEventClassID has_cs \"DNS\" and isnotempty(DestinationDnsDomain)\r\n| extend DestinationDnsDomain = trim_end(@'.',DestinationDnsDomain)\r\n| extend domains = split(DestinationDnsDomain,'.')\r\n| extend SecondLevelDomain =strcat(domains[-2],'.',domains[-1])\r\n| distinct SecondLevelDomain",
                    "typeSettings": {
                      "additionalResourceOptions": [
                        "value::all"
                      ],
                      "selectAllValue": "*",
                      "showDefault": false
                    },
                    "timeContext": {
                      "durationMs": 1209600000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "defaultValue": "value::all",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "value": [
                      "value::all"
                    ]
                  },
                  {
                    "id": "aeb144ce-64b1-45ba-85d9-f0a2da9a69d3",
                    "version": "KqlParameterItem/1.0",
                    "name": "DNSRecordType",
                    "type": 2,
                    "multiSelect": true,
                    "quote": "'",
                    "delimiter": ",",
                    "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID has_cs \"DNS\"\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where isnotempty(InfobloxDNSQType)\r\n| distinct InfobloxDNSQType\r\n| order by InfobloxDNSQType asc",
                    "typeSettings": {
                      "additionalResourceOptions": [
                        "value::all"
                      ],
                      "selectAllValue": "*",
                      "showDefault": false
                    },
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "defaultValue": "value::all",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "label": "DNS Record Type",
                    "value": [
                      "value::all"
                    ]
                  },
                  {
                    "id": "f67927b9-00eb-4a45-b9d0-4bde9ac74d86",
                    "version": "KqlParameterItem/1.0",
                    "name": "PolicyName",
                    "label": "Policy Name",
                    "type": 2,
                    "multiSelect": true,
                    "quote": "'",
                    "delimiter": ",",
                    "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\"\r\n    and DeviceProduct == \"Data Connector\"\r\n    and DeviceEventClassID has_cs \"RPZ\"\r\n| parse-kv AdditionalExtensions as (InfobloxB1PolicyName: string) with ( kv_delimiter=\"=\", pair_delimiter=\";\")\r\n| where isnotempty(InfobloxB1PolicyName)\r\n| distinct InfobloxB1PolicyName\r\n| sort by InfobloxB1PolicyName asc",
                    "typeSettings": {
                      "additionalResourceOptions": [
                        "value::all"
                      ],
                      "selectAllValue": "*",
                      "showDefault": false
                    },
                    "timeContext": {
                      "durationMs": 1209600000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "defaultValue": "value::all",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "value": [
                      "value::all"
                    ]
                  }
                ],
                "style": "pills",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces"
              },
              "name": "parameters - 1"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\"\r\n    and DeviceProduct == \"Data Connector\"\r\n    and DeviceEventClassID has_cs \"RPZ\"\r\n    and isnotempty(SourceUserName)\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxB1Region:string, InfobloxB1PolicyAction: string, InfobloxB1PolicyName: string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{User:escapejson}' == \"*\" or SourceUserName in~ ({User})) and ('{DNSRecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({DNSRecordType})) and ('{Asset:escapejson}' == \"*\" or DeviceName in~ ({Asset})) and ('{Location:escapejson}' == \"*\" or InfobloxB1Region in~ ({Location})) and ('{FQDN:escapejson}' == \"*\" or DestinationDnsDomain in~ ({FQDN})) and ('{PolicyName:escapejson}' == \"*\" or InfobloxB1PolicyName in~ ({PolicyName}))\r\n| where InfobloxB1PolicyAction == \"Block\"\r\n| extend DestinationDnsDomain_ = trim_end(@'.',DestinationDnsDomain)\r\n| extend domains = split(DestinationDnsDomain_,'.')\r\n| extend SecondLevelDomain =strcat(domains[-2],'.',domains[-1])\r\n| where ('{SLD:escapejson}' == \"*\" or SecondLevelDomain in~ ({SLD}))\r\n| summarize Count  = count() by User = SourceUserName\r\n| top 10 by Count",
                "size": 0,
                "showAnalytics": true,
                "title": "Top 10 Compromised Users",
                "timeContextFromParameter": "TimeRange",
                "showRefreshButton": true,
                "showExportToExcel": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "gridSettings": {
                  "formatters": [
                    {
                      "columnMatch": "Count",
                      "formatter": 4,
                      "formatOptions": {
                        "palette": "blue"
                      }
                    }
                  ]
                }
              },
              "customWidth": "50",
              "name": "query - 0 - Copy",
              "styleSettings": {
                "margin": "5px",
                "maxWidth": "33",
                "showBorder": true
              }
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\"\r\n    and DeviceProduct == \"Data Connector\"\r\n    and DeviceEventClassID has_cs \"RPZ\"\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxB1Region:string, InfobloxB1PolicyAction: string, InfobloxB1PolicyName: string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{User:escapejson}' == \"*\" or SourceUserName in~ ({User})) and ('{DNSRecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({DNSRecordType})) and ('{Asset:escapejson}' == \"*\" or DeviceName in~ ({Asset})) and ('{Location:escapejson}' == \"*\" or InfobloxB1Region in~ ({Location})) and ('{FQDN:escapejson}' == \"*\" or DestinationDnsDomain in~ ({FQDN})) and ('{PolicyName:escapejson}' == \"*\" or InfobloxB1PolicyName in~ ({PolicyName}))\r\n| where InfobloxB1PolicyAction == \"Block\"\r\n| extend DestinationDnsDomain_ = trim_end(@'.',DestinationDnsDomain)\r\n| extend domains = split(DestinationDnsDomain_,'.')\r\n| extend SecondLevelDomain =strcat(domains[-2],'.',domains[-1])\r\n| where ('{SLD:escapejson}' == \"*\" or SecondLevelDomain in~ ({SLD}))\r\n| summarize Count  = count() by DestinationDnsDomain\r\n| project-rename Domain = DestinationDnsDomain\r\n| top 10 by Count",
                "size": 3,
                "showAnalytics": true,
                "title": "Top 10 Blocked Domains",
                "timeContextFromParameter": "TimeRange",
                "showRefreshButton": true,
                "showExportToExcel": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "piechart",
                "gridSettings": {
                  "formatters": [
                    {
                      "columnMatch": "Count",
                      "formatter": 4,
                      "formatOptions": {
                        "palette": "blue"
                      }
                    }
                  ]
                },
                "chartSettings": {
                  "createOtherGroup": 10,
                  "showMetrics": false,
                  "showLegend": true
                }
              },
              "customWidth": "50",
              "name": "query - 2",
              "styleSettings": {
                "margin": "5px",
                "padding": "49px",
                "showBorder": true
              }
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\"\r\n    and DeviceProduct == \"Data Connector\"\r\n    and DeviceEventClassID has_cs \"RPZ\"\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxB1Region:string, InfobloxB1PolicyAction: string, InfobloxB1PolicyName: string, InfobloxRPZRule: string, InfobloxPolicyID: string, InfobloxDomainCat: string, InfobloxB1ConnectionType: string, InfobloxB1Network: string,InfobloxB1SrcOSVersion: string, InfobloxB1DNSTags:string, InfobloxB1ThreatIndicator: string, InfobloxB1FeedType: string, InfobloxThreatLevel:string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{User:escapejson}' == \"*\" or SourceUserName in~ ({User})) and ('{DNSRecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({DNSRecordType})) and ('{Asset:escapejson}' == \"*\" or DeviceName in~ ({Asset})) and ('{Location:escapejson}' == \"*\" or InfobloxB1Region in~ ({Location})) and ('{FQDN:escapejson}' == \"*\" or DestinationDnsDomain in~ ({FQDN})) and ('{PolicyName:escapejson}' == \"*\" or InfobloxB1PolicyName in~ ({PolicyName}))\r\n| where InfobloxB1PolicyAction == \"Block\"\r\n| extend DestinationDnsDomain_ = trim_end(@'.',DestinationDnsDomain)\r\n| extend domains = split(DestinationDnsDomain_,'.')\r\n| extend SecondLevelDomain =strcat(domains[-2],'.',domains[-1])\r\n| where ('{SLD:escapejson}' == \"*\" or SecondLevelDomain in~ ({SLD}))\r\n| summarize Count = count() by InfobloxRPZRule\r\n| top 10 by Count desc",
                "size": 3,
                "showAnalytics": true,
                "title": "Top 10 RPZ rules hit",
                "timeContextFromParameter": "TimeRange",
                "showRefreshButton": true,
                "showExportToExcel": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "piechart",
                "chartSettings": {
                  "createOtherGroup": 10,
                  "showMetrics": false,
                  "showLegend": true
                }
              },
              "customWidth": "50",
              "name": "query - 8",
              "styleSettings": {
                "padding": "49px",
                "showBorder": true
              }
            },
            {
              "type": 12,
              "content": {
                "version": "NotebookGroup/1.0",
                "groupType": "editable",
                "items": [
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\"\r\n    and DeviceProduct == \"Data Connector\"\r\n    and DeviceEventClassID has_cs \"RPZ\"\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxB1Region:string, InfobloxB1PolicyAction: string, InfobloxB1PolicyName: string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{User:escapejson}' == \"*\" or SourceUserName in~ ({User})) and ('{DNSRecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({DNSRecordType})) and ('{Asset:escapejson}' == \"*\" or DeviceName in~ ({Asset})) and ('{Location:escapejson}' == \"*\" or InfobloxB1Region in~ ({Location})) and ('{FQDN:escapejson}' == \"*\" or DestinationDnsDomain in~ ({FQDN})) and ('{PolicyName:escapejson}' == \"*\" or InfobloxB1PolicyName in~ ({PolicyName}))\r\n| where InfobloxB1PolicyAction == \"Block\"\r\n| extend DestinationDnsDomain_ = trim_end(@'.',DestinationDnsDomain)\r\n| extend domains = split(DestinationDnsDomain_,'.')\r\n| extend SecondLevelDomain =strcat(domains[-2],'.',domains[-1])\r\n| where ('{SLD:escapejson}' == \"*\" or SecondLevelDomain in~ ({SLD}))\r\n| project-rename Location = InfobloxB1Region\r\n| summarize Count = count() by Location\r\n",
                      "size": 3,
                      "showAnalytics": true,
                      "title": "Block Requests by Location",
                      "timeContextFromParameter": "TimeRange",
                      "showRefreshButton": true,
                      "exportFieldName": "series",
                      "exportParameterName": "Pie_Location",
                      "showExportToExcel": true,
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "visualization": "piechart",
                      "chartSettings": {
                        "createOtherGroup": 10,
                        "showMetrics": false,
                        "showLegend": true
                      }
                    },
                    "customWidth": "100",
                    "showPin": false,
                    "name": "query - 6",
                    "styleSettings": {
                      "padding": "50px",
                      "showBorder": true
                    }
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "💡 _Click on a 'Block Requests by Location' pie chart to see 'Top 10 IP Address'."
                    },
                    "conditionalVisibility": {
                      "parameterName": "Pie_Location",
                      "comparison": "isEqualTo"
                    },
                    "name": "text - 1"
                  }
                ],
                "exportParameters": true
              },
              "customWidth": "50",
              "name": "group - 7"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\"\r\n    and DeviceProduct == \"Data Connector\"\r\n    and DeviceEventClassID has_cs \"RPZ\"\r\n    and isnotempty(SourceUserName)\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxB1Region:string, InfobloxB1PolicyAction: string, InfobloxB1PolicyName: string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{User:escapejson}' == \"*\" or SourceUserName in~ ({User})) and ('{DNSRecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({DNSRecordType})) and ('{Asset:escapejson}' == \"*\" or DeviceName in~ ({Asset})) and ('{FQDN:escapejson}' == \"*\" or DestinationDnsDomain in~ ({FQDN})) and ('{PolicyName:escapejson}' == \"*\" or InfobloxB1PolicyName in~ ({PolicyName}))\r\n| where InfobloxB1PolicyAction == \"Block\" and InfobloxB1Region == ('{Pie_Location}')\r\n| extend DestinationDnsDomain_ = trim_end(@'.',DestinationDnsDomain)\r\n| extend domains = split(DestinationDnsDomain_,'.')\r\n| extend SecondLevelDomain =strcat(domains[-2],'.',domains[-1])\r\n| where ('{SLD:escapejson}' == \"*\" or SecondLevelDomain in~ ({SLD}))\r\n| summarize Count  = count() by SourceIP\r\n| top 10 by Count",
                "size": 0,
                "showAnalytics": true,
                "title": "Top 10 IP Address for Location : {Pie_Location}",
                "timeContextFromParameter": "TimeRange",
                "showRefreshButton": true,
                "showExportToExcel": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "gridSettings": {
                  "formatters": [
                    {
                      "columnMatch": "Count",
                      "formatter": 4,
                      "formatOptions": {
                        "palette": "blue"
                      }
                    }
                  ]
                }
              },
              "customWidth": "50",
              "conditionalVisibility": {
                "parameterName": "Pie_Location",
                "comparison": "isNotEqualTo"
              },
              "name": "query - 7",
              "styleSettings": {
                "showBorder": true
              }
            },
            {
              "type": 12,
              "content": {
                "version": "NotebookGroup/1.0",
                "groupType": "editable",
                "items": [
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\"\r\n    and DeviceProduct == \"Data Connector\"\r\n    and DeviceEventClassID has_cs \"RPZ\"\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxB1Region:string, InfobloxB1PolicyAction: string, InfobloxB1PolicyName: string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{User:escapejson}' == \"*\" or SourceUserName in~ ({User})) and ('{DNSRecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({DNSRecordType})) and ('{Asset:escapejson}' == \"*\" or DeviceName in~ ({Asset})) and ('{Location:escapejson}' == \"*\" or InfobloxB1Region in~ ({Location})) and ('{FQDN:escapejson}' == \"*\" or DestinationDnsDomain in~ ({FQDN})) and ('{PolicyName:escapejson}' == \"*\" or InfobloxB1PolicyName in~ ({PolicyName}))\r\n| where InfobloxB1PolicyAction == \"Block\"\r\n| extend DestinationDnsDomain_ = trim_end(@'.',DestinationDnsDomain)\r\n| extend domains = split(DestinationDnsDomain_,'.')\r\n| extend SecondLevelDomain =strcat(domains[-2],'.',domains[-1])\r\n| where ('{SLD:escapejson}' == \"*\" or SecondLevelDomain in~ ({SLD}))\r\n| summarize Count  = count() by Asset =  DeviceName\r\n| top 10 by Count",
                      "size": 0,
                      "showAnalytics": true,
                      "title": "Top 10 Malicious Assets",
                      "timeContextFromParameter": "TimeRange",
                      "showRefreshButton": true,
                      "exportFieldName": "Asset",
                      "exportParameterName": "DeviceName",
                      "showExportToExcel": true,
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces",
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "Count",
                            "formatter": 4,
                            "formatOptions": {
                              "palette": "blue"
                            }
                          }
                        ]
                      }
                    },
                    "customWidth": "100",
                    "name": "query - 0",
                    "styleSettings": {
                      "margin": "5px",
                      "showBorder": true
                    }
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "💡 _Click on a 'Top 10 Malicious Assets' grid to see 'Asset Details' for Specific Asset."
                    },
                    "conditionalVisibility": {
                      "parameterName": "DeviceName",
                      "comparison": "isEqualTo"
                    },
                    "name": "text - 1"
                  }
                ],
                "exportParameters": true
              },
              "customWidth": "50",
              "name": "group - 6"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\"\r\n    and DeviceProduct == \"Data Connector\"\r\n    and DeviceEventClassID has_cs \"RPZ\"\r\n    and DeviceName == ('{DeviceName}')\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxB1Region:string, InfobloxB1PolicyAction: string, InfobloxB1PolicyName: string, InfobloxRPZRule: string, InfobloxPolicyID: string, InfobloxDomainCat: string, InfobloxB1ConnectionType: string, InfobloxB1Network: string,InfobloxB1SrcOSVersion: string, InfobloxB1DNSTags:string, InfobloxB1ThreatIndicator: string, InfobloxB1FeedType: string ) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{User:escapejson}' == \"*\" or SourceUserName in~ ({User})) and ('{DNSRecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({DNSRecordType})) and ('{Location:escapejson}' == \"*\" or InfobloxB1Region in~ ({Location})) and ('{FQDN:escapejson}' == \"*\" or DestinationDnsDomain in~ ({FQDN})) and ('{PolicyName:escapejson}' == \"*\" or InfobloxB1PolicyName in~ ({PolicyName}))\r\n| where InfobloxB1PolicyAction == \"Block\"\r\n| extend DestinationDnsDomain_ = trim_end(@'.',DestinationDnsDomain)\r\n| extend domains = split(DestinationDnsDomain_,'.')\r\n| extend SecondLevelDomain =strcat(domains[-2],'.',domains[-1])\r\n| where ('{SLD:escapejson}' == \"*\" or SecondLevelDomain in~ ({SLD}))\r\n| project-rename User = SourceUserName, Asset = DeviceName\r\n| project TimeGenerated, Asset, SourceIP, User, LogSeverity, Activity, Computer, CollectorHostName, ApplicationProtocol, InfobloxRPZRule, InfobloxB1PolicyName, InfobloxB1PolicyAction, InfobloxPolicyID, InfobloxB1Region, InfobloxB1ConnectionType, InfobloxB1DNSTags, InfobloxB1ThreatIndicator, InfobloxB1FeedType\r\n",
                "size": 0,
                "showAnalytics": true,
                "title": "Overall Asset : {DeviceName} Details ",
                "timeContextFromParameter": "TimeRange",
                "showRefreshButton": true,
                "showExportToExcel": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "gridSettings": {
                  "rowLimit": 10000,
                  "filter": true
                }
              },
              "conditionalVisibility": {
                "parameterName": "DeviceName",
                "comparison": "isNotEqualTo"
              },
              "name": "query - 5",
              "styleSettings": {
                "showBorder": true
              }
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "CommonSecurityLog\r\n| where DeviceVendor == \"Infoblox\"\r\n    and DeviceProduct == \"Data Connector\"\r\n    and DeviceEventClassID has_cs \"RPZ\"\r\n| parse-kv AdditionalExtensions as (InfobloxDNSQType:string, InfobloxB1Region:string, InfobloxB1PolicyAction: string, InfobloxB1PolicyName: string, InfobloxRPZRule: string, InfobloxPolicyID: string, InfobloxDomainCat: string, InfobloxB1ConnectionType: string, InfobloxB1Network: string,InfobloxB1SrcOSVersion: string, InfobloxB1DNSTags:string, InfobloxB1ThreatIndicator: string, InfobloxB1FeedType: string, InfobloxThreatLevel:string) with (pair_delimiter=';', kv_delimiter='=')\r\n| where ('{User:escapejson}' == \"*\" or SourceUserName in~ ({User})) and ('{DNSRecordType:escapejson}' == \"*\" or InfobloxDNSQType in~ ({DNSRecordType})) and ('{Asset:escapejson}' == \"*\" or DeviceName in~ ({Asset})) and ('{Location:escapejson}' == \"*\" or InfobloxB1Region in~ ({Location})) and ('{FQDN:escapejson}' == \"*\" or DestinationDnsDomain in~ ({FQDN})) and ('{PolicyName:escapejson}' == \"*\" or InfobloxB1PolicyName in~ ({PolicyName}))\r\n| where InfobloxB1PolicyAction == \"Block\"\r\n| extend DestinationDnsDomain_ = trim_end(@'.',DestinationDnsDomain)\r\n| extend domains = split(DestinationDnsDomain_,'.')\r\n| extend SecondLevelDomain =strcat(domains[-2],'.',domains[-1])\r\n| where ('{SLD:escapejson}' == \"*\" or SecondLevelDomain in~ ({SLD}))\r\n| project-rename User = SourceUserName, Asset = DeviceName, ['Policy Action'] = InfobloxB1PolicyAction, ['Threat Level'] = InfobloxThreatLevel, ['Policy Name'] = InfobloxB1PolicyName, Location = InfobloxB1Region\r\n| project TimeGenerated, User, ['Policy Action'], ['Policy Name'], Asset, SourceIP, LogSeverity, Location, ['Threat Level'], Activity, Computer, CollectorHostName, ApplicationProtocol, InfobloxRPZRule, InfobloxPolicyID, InfobloxB1ConnectionType, InfobloxB1DNSTags, InfobloxB1ThreatIndicator, InfobloxB1FeedType",
                "size": 0,
                "showAnalytics": true,
                "title": "Overall Blocked DNS Requests",
                "timeContextFromParameter": "TimeRange",
                "showRefreshButton": true,
                "showExportToExcel": true,
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "gridSettings": {
                  "formatters": [
                    {
                      "columnMatch": "InfobloxB1PolicyAction",
                      "formatter": 18,
                      "formatOptions": {
                        "thresholdsOptions": "colors",
                        "thresholdsGrid": [
                          {
                            "operator": "==",
                            "thresholdValue": "Blocked",
                            "representation": "green",
                            "text": "{0}{1}"
                          },
                          {
                            "operator": "Default",
                            "thresholdValue": null,
                            "representation": "green",
                            "text": "{0}{1}"
                          }
                        ]
                      }
                    },
                    {
                      "columnMatch": "InfobloxThreatLevel",
                      "formatter": 18,
                      "formatOptions": {
                        "thresholdsOptions": "colors",
                        "thresholdsGrid": [
                          {
                            "operator": "==",
                            "thresholdValue": "N/A",
                            "representation": "gray",
                            "text": "{0}{1}"
                          },
                          {
                            "operator": "==",
                            "thresholdValue": "Low",
                            "representation": "yellow",
                            "text": "{0}{1}"
                          },
                          {
                            "operator": "==",
                            "thresholdValue": "Info",
                            "representation": "lightBlue",
                            "text": "{0}{1}"
                          },
                          {
                            "operator": "==",
                            "thresholdValue": "Medium",
                            "representation": "orange",
                            "text": "{0}{1}"
                          },
                          {
                            "operator": "==",
                            "thresholdValue": "High",
                            "representation": "red",
                            "text": "{0}{1}"
                          },
                          {
                            "operator": "Default",
                            "thresholdValue": null,
                            "representation": "lightBlue",
                            "text": "{0}{1}"
                          }
                        ]
                      }
                    }
                  ],
                  "rowLimit": 10000,
                  "filter": true
                }
              },
              "name": "query - 3",
              "styleSettings": {
                "showBorder": true
              }
            }
          ]
        },
        "conditionalVisibility": {
          "parameterName": "Parameter",
          "comparison": "isEqualTo",
          "value": "4"
        },
        "name": "group - 4"
      }
    ],
    "fromTemplateId": "sentinel-Infoblox-Workbook",
    "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
  }